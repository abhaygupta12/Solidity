{
	"id": "2bbcbb89caea03ac98d677d065ba1ae0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"ballotwithmodifier.sol": {
				"content": "pragma solidity ^0.4.0;\r\ncontract Ballot {\r\n\r\n    struct Voter {\r\n        uint weight;\r\n        bool voted;\r\n        uint8 vote;\r\n        //address delegate;\r\n    }\r\n    struct Proposal {\r\n        uint voteCount;\r\n    }\r\n    enum Stage {Init,Reg, Vote, Done}\r\n    Stage public stage = Stage.Init;\r\n    \r\n    address chairperson;\r\n    mapping(address => Voter) voters;\r\n    Proposal[] proposals;\r\n\r\n    event votingCompleted();\r\n    \r\n    uint startTime;\r\n    //modifiers\r\n   modifier validStage(Stage reqStage)\r\n    { require(stage == reqStage);\r\n      _;\r\n    }\r\n\r\n\r\n    /// Create a new ballot with $(_numProposals) different proposals.\r\n    function Ballot(uint8 _numProposals) public  {\r\n        chairperson = msg.sender;\r\n        voters[chairperson].weight = 2; // weight is 2 for testing purposes\r\n        proposals.length = _numProposals;\r\n        stage = Stage.Reg;\r\n        startTime = now;\r\n    }\r\n\r\n    /// Give $(toVoter) the right to vote on this ballot.\r\n    /// May only be called by $(chairperson).\r\n    function register(address toVoter) public validStage(Stage.Reg) {\r\n        //if (stage != Stage.Reg) {return;}\r\n        if (msg.sender != chairperson || voters[toVoter].voted) return;\r\n        voters[toVoter].weight = 1;\r\n        voters[toVoter].voted = false;\r\n        if (now > (startTime+ 30 seconds)) {stage = Stage.Vote; }        \r\n    }\r\n\r\n    /// Give a single vote to proposal $(toProposal).\r\n    function vote(uint8 toProposal) public validStage(Stage.Vote)  {\r\n       // if (stage != Stage.Vote) {return;}\r\n        Voter storage sender = voters[msg.sender];\r\n        if (sender.voted || toProposal >= proposals.length) return;\r\n        sender.voted = true;\r\n        sender.vote = toProposal;   \r\n        proposals[toProposal].voteCount += sender.weight;\r\n        if (now > (startTime+ 30 seconds)) {stage = Stage.Done; votingCompleted();}        \r\n        \r\n    }\r\n\r\n    function winningProposal() public validStage(Stage.Done) constant returns (uint8 _winningProposal) {\r\n       //if(stage != Stage.Done) {return;}\r\n        uint256 winningVoteCount = 0;\r\n        for (uint8 prop = 0; prop < proposals.length; prop++)\r\n            if (proposals[prop].voteCount > winningVoteCount) {\r\n                winningVoteCount = proposals[prop].voteCount;\r\n                _winningProposal = prop;\r\n            }\r\n       assert (winningVoteCount > 0);\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ballotwithmodifier.sol": {
				"Ballot": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "toVoter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "winningProposal",
							"outputs": [
								{
									"name": "_winningProposal",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "toProposal",
									"type": "uint8"
								}
							],
							"name": "vote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "stage",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_numProposals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "votingCompleted",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"ballotwithmodifier.sol\":25:2383  contract Ballot {\r... */\n  mstore(0x40, 0x80)\n    /* \"ballotwithmodifier.sol\":285:295  Stage.Init */\n  0x0\n    /* \"ballotwithmodifier.sol\":264:295  Stage public stage = Stage.Init */\n  dup1\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x3\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ballotwithmodifier.sol\":644:906  function Ballot(uint8 _numProposals) public  {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_2:\n    /* \"ballotwithmodifier.sol\":644:906  function Ballot(uint8 _numProposals) public  {\r... */\n  pop\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"ballotwithmodifier.sol\":714:724  msg.sender */\n  caller\n    /* \"ballotwithmodifier.sol\":700:711  chairperson */\n  0x0\n  0x1\n    /* \"ballotwithmodifier.sol\":700:724  chairperson = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ballotwithmodifier.sol\":764:765  2 */\n  0x2\n    /* \"ballotwithmodifier.sol\":735:741  voters */\n  0x1\n    /* \"ballotwithmodifier.sol\":735:754  voters[chairperson] */\n  0x0\n    /* \"ballotwithmodifier.sol\":742:753  chairperson */\n  dup1\n  0x1\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ballotwithmodifier.sol\":735:754  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"ballotwithmodifier.sol\":735:761  voters[chairperson].weight */\n  0x0\n  add\n    /* \"ballotwithmodifier.sol\":735:765  voters[chairperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ballotwithmodifier.sol\":831:844  _numProposals */\n  dup1\n    /* \"ballotwithmodifier.sol\":812:844  proposals.length = _numProposals */\n  0xff\n  and\n    /* \"ballotwithmodifier.sol\":812:821  proposals */\n  0x2\n    /* \"ballotwithmodifier.sol\":812:844  proposals.length = _numProposals */\n  dup2\n  tag_5\n  swap2\n  swap1\n  jump\t// in(tag_6)\ntag_5:\n  pop\n    /* \"ballotwithmodifier.sol\":863:872  Stage.Reg */\n  0x1\n    /* \"ballotwithmodifier.sol\":855:860  stage */\n  0x0\n  dup1\n    /* \"ballotwithmodifier.sol\":855:872  stage = Stage.Reg */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x3\n  dup2\n  gt\n  iszero\n  tag_7\n  jumpi\n  invalid\ntag_7:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ballotwithmodifier.sol\":895:898  now */\n  timestamp\n    /* \"ballotwithmodifier.sol\":883:892  startTime */\n  0x3\n    /* \"ballotwithmodifier.sol\":883:898  startTime = now */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ballotwithmodifier.sol\":644:906  function Ballot(uint8 _numProposals) public  {\r... */\n  pop\n    /* \"ballotwithmodifier.sol\":25:2383  contract Ballot {\r... */\n  jump(tag_8)\ntag_6:\n  dup2\n  sload\n  dup2\n  dup4\n  sstore\n  dup2\n  dup2\n  gt\n  iszero\n  tag_9\n  jumpi\n  dup2\n  dup4\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap2\n  dup3\n  add\n  swap2\n  add\n  tag_10\n  swap2\n  swap1\n  jump\t// in(tag_11)\ntag_10:\ntag_9:\n  pop\n  pop\n  pop\n  jump\t// out\ntag_11:\n  tag_12\n  swap2\n  swap1\ntag_13:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_14\n  jumpi\n  0x0\n  dup1\n  dup3\n  add\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_13)\ntag_14:\n  pop\n  swap1\n  jump\ntag_12:\n  swap1\n  jump\t// out\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"ballotwithmodifier.sol\":25:2383  contract Ballot {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x4420e486\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x609ff1bd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb3f98adc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc040e6b8\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"ballotwithmodifier.sol\":1020:1362  function register(address toVoter) public validStage(Stage.Reg) {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_6:\n        /* \"ballotwithmodifier.sol\":1020:1362  function register(address toVoter) public validStage(Stage.Reg) {\r... */\n      pop\n      tag_7\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_8)\n    tag_7:\n      stop\n        /* \"ballotwithmodifier.sol\":1901:2380  function winningProposal() public validStage(Stage.Done) constant returns (uint8 _winningProposal) {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"ballotwithmodifier.sol\":1901:2380  function winningProposal() public validStage(Stage.Done) constant returns (uint8 _winningProposal) {\r... */\n      pop\n      tag_10\n      jump(tag_11)\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ballotwithmodifier.sol\":1425:1893  function vote(uint8 toProposal) public validStage(Stage.Vote)  {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"ballotwithmodifier.sol\":1425:1893  function vote(uint8 toProposal) public validStage(Stage.Vote)  {\r... */\n      pop\n      tag_13\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_14)\n    tag_13:\n      stop\n        /* \"ballotwithmodifier.sol\":264:295  Stage public stage = Stage.Init */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"ballotwithmodifier.sol\":264:295  Stage public stage = Stage.Init */\n      pop\n      tag_16\n      jump(tag_17)\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      0x3\n      dup2\n      gt\n      iszero\n      tag_18\n      jumpi\n      invalid\n    tag_18:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ballotwithmodifier.sol\":1020:1362  function register(address toVoter) public validStage(Stage.Reg) {\r... */\n    tag_8:\n        /* \"ballotwithmodifier.sol\":1073:1082  Stage.Reg */\n      0x1\n        /* \"ballotwithmodifier.sol\":535:543  reqStage */\n      dup1\n        /* \"ballotwithmodifier.sol\":526:543  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_20\n      jumpi\n      invalid\n    tag_20:\n        /* \"ballotwithmodifier.sol\":526:531  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ballotwithmodifier.sol\":526:543  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      eq\n        /* \"ballotwithmodifier.sol\":518:544  require(stage == reqStage) */\n      iszero\n      iszero\n      tag_22\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_22:\n        /* \"ballotwithmodifier.sol\":1158:1169  chairperson */\n      0x0\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ballotwithmodifier.sol\":1144:1169  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ballotwithmodifier.sol\":1144:1154  msg.sender */\n      caller\n        /* \"ballotwithmodifier.sol\":1144:1169  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ballotwithmodifier.sol\":1144:1194  msg.sender != chairperson || voters[toVoter].voted */\n      dup1\n      tag_24\n      jumpi\n      pop\n        /* \"ballotwithmodifier.sol\":1173:1179  voters */\n      0x1\n        /* \"ballotwithmodifier.sol\":1173:1188  voters[toVoter] */\n      0x0\n        /* \"ballotwithmodifier.sol\":1180:1187  toVoter */\n      dup4\n        /* \"ballotwithmodifier.sol\":1173:1188  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"ballotwithmodifier.sol\":1173:1194  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ballotwithmodifier.sol\":1144:1194  msg.sender != chairperson || voters[toVoter].voted */\n    tag_24:\n        /* \"ballotwithmodifier.sol\":1140:1203  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n      iszero\n      tag_25\n      jumpi\n        /* \"ballotwithmodifier.sol\":1196:1203  return; */\n      jump(tag_23)\n        /* \"ballotwithmodifier.sol\":1140:1203  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n    tag_25:\n        /* \"ballotwithmodifier.sol\":1238:1239  1 */\n      0x1\n        /* \"ballotwithmodifier.sol\":1213:1219  voters */\n      dup1\n        /* \"ballotwithmodifier.sol\":1213:1228  voters[toVoter] */\n      0x0\n        /* \"ballotwithmodifier.sol\":1220:1227  toVoter */\n      dup5\n        /* \"ballotwithmodifier.sol\":1213:1228  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"ballotwithmodifier.sol\":1213:1235  voters[toVoter].weight */\n      0x0\n      add\n        /* \"ballotwithmodifier.sol\":1213:1239  voters[toVoter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ballotwithmodifier.sol\":1274:1279  false */\n      0x0\n        /* \"ballotwithmodifier.sol\":1250:1256  voters */\n      0x1\n        /* \"ballotwithmodifier.sol\":1250:1265  voters[toVoter] */\n      0x0\n        /* \"ballotwithmodifier.sol\":1257:1264  toVoter */\n      dup5\n        /* \"ballotwithmodifier.sol\":1250:1265  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"ballotwithmodifier.sol\":1250:1271  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n        /* \"ballotwithmodifier.sol\":1250:1279  voters[toVoter].voted = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ballotwithmodifier.sol\":1312:1322  30 seconds */\n      0x1e\n        /* \"ballotwithmodifier.sol\":1301:1310  startTime */\n      sload(0x3)\n        /* \"ballotwithmodifier.sol\":1301:1322  startTime+ 30 seconds */\n      add\n        /* \"ballotwithmodifier.sol\":1294:1297  now */\n      timestamp\n        /* \"ballotwithmodifier.sol\":1294:1323  now > (startTime+ 30 seconds) */\n      gt\n        /* \"ballotwithmodifier.sol\":1290:1347  if (now > (startTime+ 30 seconds)) {stage = Stage.Vote; } */\n      iszero\n      tag_26\n      jumpi\n        /* \"ballotwithmodifier.sol\":1334:1344  Stage.Vote */\n      0x2\n        /* \"ballotwithmodifier.sol\":1326:1331  stage */\n      0x0\n      dup1\n        /* \"ballotwithmodifier.sol\":1326:1344  stage = Stage.Vote */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x3\n      dup2\n      gt\n      iszero\n      tag_27\n      jumpi\n      invalid\n    tag_27:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ballotwithmodifier.sol\":1290:1347  if (now > (startTime+ 30 seconds)) {stage = Stage.Vote; } */\n    tag_26:\n        /* \"ballotwithmodifier.sol\":553:554  _ */\n    tag_23:\n        /* \"ballotwithmodifier.sol\":1020:1362  function register(address toVoter) public validStage(Stage.Reg) {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"ballotwithmodifier.sol\":1901:2380  function winningProposal() public validStage(Stage.Done) constant returns (uint8 _winningProposal) {\r... */\n    tag_11:\n        /* \"ballotwithmodifier.sol\":1976:1998  uint8 _winningProposal */\n      0x0\n        /* \"ballotwithmodifier.sol\":2055:2079  uint256 winningVoteCount */\n      dup1\n        /* \"ballotwithmodifier.sol\":2099:2109  uint8 prop */\n      0x0\n        /* \"ballotwithmodifier.sol\":1946:1956  Stage.Done */\n      0x3\n        /* \"ballotwithmodifier.sol\":535:543  reqStage */\n      dup1\n        /* \"ballotwithmodifier.sol\":526:543  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_29\n      jumpi\n      invalid\n    tag_29:\n        /* \"ballotwithmodifier.sol\":526:531  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ballotwithmodifier.sol\":526:543  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      invalid\n    tag_30:\n      eq\n        /* \"ballotwithmodifier.sol\":518:544  require(stage == reqStage) */\n      iszero\n      iszero\n      tag_31\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_31:\n        /* \"ballotwithmodifier.sol\":2082:2083  0 */\n      0x0\n        /* \"ballotwithmodifier.sol\":2055:2083  uint256 winningVoteCount = 0 */\n      swap3\n      pop\n        /* \"ballotwithmodifier.sol\":2112:2113  0 */\n      0x0\n        /* \"ballotwithmodifier.sol\":2099:2113  uint8 prop = 0 */\n      swap2\n      pop\n        /* \"ballotwithmodifier.sol\":2094:2332  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n    tag_33:\n        /* \"ballotwithmodifier.sol\":2122:2131  proposals */\n      0x2\n        /* \"ballotwithmodifier.sol\":2122:2138  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"ballotwithmodifier.sol\":2115:2119  prop */\n      dup3\n        /* \"ballotwithmodifier.sol\":2115:2138  prop < proposals.length */\n      0xff\n      and\n      lt\n        /* \"ballotwithmodifier.sol\":2094:2332  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n      iszero\n      tag_34\n      jumpi\n        /* \"ballotwithmodifier.sol\":2193:2209  winningVoteCount */\n      dup3\n        /* \"ballotwithmodifier.sol\":2165:2174  proposals */\n      0x2\n        /* \"ballotwithmodifier.sol\":2175:2179  prop */\n      dup4\n        /* \"ballotwithmodifier.sol\":2165:2180  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_36\n      jumpi\n      invalid\n    tag_36:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"ballotwithmodifier.sol\":2165:2190  proposals[prop].voteCount */\n      0x0\n      add\n      sload\n        /* \"ballotwithmodifier.sol\":2165:2209  proposals[prop].voteCount > winningVoteCount */\n      gt\n        /* \"ballotwithmodifier.sol\":2161:2332  if (proposals[prop].voteCount > winningVoteCount) {\r... */\n      iszero\n      tag_38\n      jumpi\n        /* \"ballotwithmodifier.sol\":2249:2258  proposals */\n      0x2\n        /* \"ballotwithmodifier.sol\":2259:2263  prop */\n      dup3\n        /* \"ballotwithmodifier.sol\":2249:2264  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_39\n      jumpi\n      invalid\n    tag_39:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"ballotwithmodifier.sol\":2249:2274  proposals[prop].voteCount */\n      0x0\n      add\n      sload\n        /* \"ballotwithmodifier.sol\":2230:2274  winningVoteCount = proposals[prop].voteCount */\n      swap3\n      pop\n        /* \"ballotwithmodifier.sol\":2312:2316  prop */\n      dup2\n        /* \"ballotwithmodifier.sol\":2293:2316  _winningProposal = prop */\n      swap4\n      pop\n        /* \"ballotwithmodifier.sol\":2161:2332  if (proposals[prop].voteCount > winningVoteCount) {\r... */\n    tag_38:\n        /* \"ballotwithmodifier.sol\":2140:2146  prop++ */\n      dup2\n      dup1\n      0x1\n      add\n      swap3\n      pop\n      pop\n        /* \"ballotwithmodifier.sol\":2094:2332  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n      jump(tag_33)\n    tag_34:\n        /* \"ballotwithmodifier.sol\":2368:2369  0 */\n      0x0\n        /* \"ballotwithmodifier.sol\":2349:2365  winningVoteCount */\n      dup4\n        /* \"ballotwithmodifier.sol\":2349:2369  winningVoteCount > 0 */\n      gt\n        /* \"ballotwithmodifier.sol\":2341:2370  assert (winningVoteCount > 0) */\n      iszero\n      iszero\n      tag_41\n      jumpi\n      invalid\n    tag_41:\n        /* \"ballotwithmodifier.sol\":1901:2380  function winningProposal() public validStage(Stage.Done) constant returns (uint8 _winningProposal) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"ballotwithmodifier.sol\":1425:1893  function vote(uint8 toProposal) public validStage(Stage.Vote)  {\r... */\n    tag_14:\n        /* \"ballotwithmodifier.sol\":1545:1565  Voter storage sender */\n      0x0\n        /* \"ballotwithmodifier.sol\":1475:1485  Stage.Vote */\n      0x2\n        /* \"ballotwithmodifier.sol\":535:543  reqStage */\n      dup1\n        /* \"ballotwithmodifier.sol\":526:543  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_43\n      jumpi\n      invalid\n    tag_43:\n        /* \"ballotwithmodifier.sol\":526:531  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ballotwithmodifier.sol\":526:543  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_44\n      jumpi\n      invalid\n    tag_44:\n      eq\n        /* \"ballotwithmodifier.sol\":518:544  require(stage == reqStage) */\n      iszero\n      iszero\n      tag_45\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_45:\n        /* \"ballotwithmodifier.sol\":1568:1574  voters */\n      0x1\n        /* \"ballotwithmodifier.sol\":1568:1586  voters[msg.sender] */\n      0x0\n        /* \"ballotwithmodifier.sol\":1575:1585  msg.sender */\n      caller\n        /* \"ballotwithmodifier.sol\":1568:1586  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"ballotwithmodifier.sol\":1545:1586  Voter storage sender = voters[msg.sender] */\n      swap2\n      pop\n        /* \"ballotwithmodifier.sol\":1601:1607  sender */\n      dup2\n        /* \"ballotwithmodifier.sol\":1601:1613  sender.voted */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ballotwithmodifier.sol\":1601:1647  sender.voted || toProposal >= proposals.length */\n      dup1\n      tag_47\n      jumpi\n      pop\n        /* \"ballotwithmodifier.sol\":1631:1640  proposals */\n      0x2\n        /* \"ballotwithmodifier.sol\":1631:1647  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"ballotwithmodifier.sol\":1617:1627  toProposal */\n      dup4\n        /* \"ballotwithmodifier.sol\":1617:1647  toProposal >= proposals.length */\n      0xff\n      and\n      lt\n      iszero\n        /* \"ballotwithmodifier.sol\":1601:1647  sender.voted || toProposal >= proposals.length */\n    tag_47:\n        /* \"ballotwithmodifier.sol\":1597:1656  if (sender.voted || toProposal >= proposals.length) return; */\n      iszero\n      tag_48\n      jumpi\n        /* \"ballotwithmodifier.sol\":1649:1656  return; */\n      jump(tag_46)\n        /* \"ballotwithmodifier.sol\":1597:1656  if (sender.voted || toProposal >= proposals.length) return; */\n    tag_48:\n        /* \"ballotwithmodifier.sol\":1681:1685  true */\n      0x1\n        /* \"ballotwithmodifier.sol\":1666:1672  sender */\n      dup3\n        /* \"ballotwithmodifier.sol\":1666:1678  sender.voted */\n      0x1\n      add\n      0x0\n        /* \"ballotwithmodifier.sol\":1666:1685  sender.voted = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ballotwithmodifier.sol\":1710:1720  toProposal */\n      dup3\n        /* \"ballotwithmodifier.sol\":1696:1702  sender */\n      dup3\n        /* \"ballotwithmodifier.sol\":1696:1707  sender.vote */\n      0x1\n      add\n      0x1\n        /* \"ballotwithmodifier.sol\":1696:1720  sender.vote = toProposal */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ballotwithmodifier.sol\":1769:1775  sender */\n      dup2\n        /* \"ballotwithmodifier.sol\":1769:1782  sender.weight */\n      0x0\n      add\n      sload\n        /* \"ballotwithmodifier.sol\":1734:1743  proposals */\n      0x2\n        /* \"ballotwithmodifier.sol\":1744:1754  toProposal */\n      dup5\n        /* \"ballotwithmodifier.sol\":1734:1755  proposals[toProposal] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_49\n      jumpi\n      invalid\n    tag_49:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"ballotwithmodifier.sol\":1734:1765  proposals[toProposal].voteCount */\n      0x0\n      add\n      0x0\n        /* \"ballotwithmodifier.sol\":1734:1782  proposals[toProposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ballotwithmodifier.sol\":1815:1825  30 seconds */\n      0x1e\n        /* \"ballotwithmodifier.sol\":1804:1813  startTime */\n      sload(0x3)\n        /* \"ballotwithmodifier.sol\":1804:1825  startTime+ 30 seconds */\n      add\n        /* \"ballotwithmodifier.sol\":1797:1800  now */\n      timestamp\n        /* \"ballotwithmodifier.sol\":1797:1826  now > (startTime+ 30 seconds) */\n      gt\n        /* \"ballotwithmodifier.sol\":1793:1868  if (now > (startTime+ 30 seconds)) {stage = Stage.Done; votingCompleted();} */\n      iszero\n      tag_51\n      jumpi\n        /* \"ballotwithmodifier.sol\":1837:1847  Stage.Done */\n      0x3\n        /* \"ballotwithmodifier.sol\":1829:1834  stage */\n      0x0\n      dup1\n        /* \"ballotwithmodifier.sol\":1829:1847  stage = Stage.Done */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x3\n      dup2\n      gt\n      iszero\n      tag_52\n      jumpi\n      invalid\n    tag_52:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ballotwithmodifier.sol\":1849:1866  votingCompleted() */\n      0x6ac0c89219f0135e3a87cecdf1851abced71da933a0a00e1eada0ef035382351\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ballotwithmodifier.sol\":1793:1868  if (now > (startTime+ 30 seconds)) {stage = Stage.Done; votingCompleted();} */\n    tag_51:\n        /* \"ballotwithmodifier.sol\":553:554  _ */\n    tag_46:\n        /* \"ballotwithmodifier.sol\":1425:1893  function vote(uint8 toProposal) public validStage(Stage.Vote)  {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ballotwithmodifier.sol\":264:295  Stage public stage = Stage.Init */\n    tag_17:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820ad262686ba06b2b1930dd8f18cbb175c477396f70abc65cc5eedc07bd53cf6710029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260008060006101000a81548160ff0219169083600381111561002257fe5b021790555034801561003357600080fd5b506040516020806107178339810180604052810190808051906020019092919050505033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508060ff166002816101119190610142565b5060016000806101000a81548160ff0219169083600381111561013057fe5b02179055504260038190555050610195565b81548183558181111561016957818360005260206000209182019101610168919061016e565b5b505050565b61019291905b8082111561018e5760008082016000905550600101610174565b5090565b90565b610573806101a46000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e48614610067578063609ff1bd146100aa578063b3f98adc146100db578063c040e6b81461010b575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610144565b005b3480156100b657600080fd5b506100bf610303565b604051808260ff1660ff16815260200191505060405180910390f35b3480156100e757600080fd5b50610109600480360381019080803560ff1690602001909291905050506103c1565b005b34801561011757600080fd5b50610120610535565b6040518082600381111561013057fe5b60ff16815260200191505060405180910390f35b600180600381111561015257fe5b6000809054906101000a900460ff16600381111561016c57fe5b14151561017857600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806102215750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561022b576102ff565b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550601e600354014211156102fe5760026000806101000a81548160ff021916908360038111156102f857fe5b02179055505b5b5050565b6000806000600380600381111561031657fe5b6000809054906101000a900460ff16600381111561033057fe5b14151561033c57600080fd5b60009250600091505b6002805490508260ff1610156103af578260028360ff1681548110151561036857fe5b906000526020600020016000015411156103a25760028260ff1681548110151561038e57fe5b906000526020600020016000015492508193505b8180600101925050610345565b6000831115156103bb57fe5b50505090565b600060028060038111156103d157fe5b6000809054906101000a900460ff1660038111156103eb57fe5b1415156103f757600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091508160010160009054906101000a900460ff168061045d57506002805490508360ff1610155b1561046757610530565b60018260010160006101000a81548160ff021916908315150217905550828260010160016101000a81548160ff021916908360ff160217905550816000015460028460ff168154811015156104b857fe5b9060005260206000200160000160008282540192505081905550601e6003540142111561052f5760036000806101000a81548160ff021916908360038111156104fd57fe5b02179055507f6ac0c89219f0135e3a87cecdf1851abced71da933a0a00e1eada0ef03538235160405160405180910390a15b5b505050565b6000809054906101000a900460ff16815600a165627a7a72305820ad262686ba06b2b1930dd8f18cbb175c477396f70abc65cc5eedc07bd53cf6710029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x717 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x142 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x130 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP PUSH2 0x195 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x169 JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x16E JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x192 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x174 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x573 DUP1 PUSH2 0x1A4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x144 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3C1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x130 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x152 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16C JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x221 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x22B JUMPI PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x2FE JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F8 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x316 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x330 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x3AF JUMPI DUP3 PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x368 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x38E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP3 POP DUP2 SWAP4 POP JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO ISZERO PUSH2 0x3BB JUMPI INVALID JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3D1 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3EB JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP2 POP DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x45D JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x467 JUMPI PUSH2 0x530 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4B8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x52F JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4FD JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x6AC0C89219F0135E3A87CECDF1851ABCED71DA933A0A00E1EADA0EF035382351 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xad 0x26 0x26 DUP7 0xba MOD 0xb2 0xb1 SWAP4 0xd 0xd8 CALL DUP13 0xbb OR 0x5c 0x47 PUSH20 0x96F70ABC65CC5EEDC07BD53CF671002900000000 ",
							"sourceMap": "25:2358:0:-;;;285:10;264:31;;;;;;;;;;;;;;;;;;;;;;;;;;644:262;8:9:-1;5:2;;;30:1;27;20:12;5:2;644:262:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;714:10;700:11;;:24;;;;;;;;;;;;;;;;;;764:1;735:6;:19;742:11;;;;;;;;;;;735:19;;;;;;;;;;;;;;;:26;;:30;;;;831:13;812:32;;:9;:32;;;;;:::i;:::-;;863:9;855:5;;:17;;;;;;;;;;;;;;;;;;;;;;;;895:3;883:9;:15;;;;644:262;25:2358;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e48614610067578063609ff1bd146100aa578063b3f98adc146100db578063c040e6b81461010b575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610144565b005b3480156100b657600080fd5b506100bf610303565b604051808260ff1660ff16815260200191505060405180910390f35b3480156100e757600080fd5b50610109600480360381019080803560ff1690602001909291905050506103c1565b005b34801561011757600080fd5b50610120610535565b6040518082600381111561013057fe5b60ff16815260200191505060405180910390f35b600180600381111561015257fe5b6000809054906101000a900460ff16600381111561016c57fe5b14151561017857600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806102215750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561022b576102ff565b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550601e600354014211156102fe5760026000806101000a81548160ff021916908360038111156102f857fe5b02179055505b5b5050565b6000806000600380600381111561031657fe5b6000809054906101000a900460ff16600381111561033057fe5b14151561033c57600080fd5b60009250600091505b6002805490508260ff1610156103af578260028360ff1681548110151561036857fe5b906000526020600020016000015411156103a25760028260ff1681548110151561038e57fe5b906000526020600020016000015492508193505b8180600101925050610345565b6000831115156103bb57fe5b50505090565b600060028060038111156103d157fe5b6000809054906101000a900460ff1660038111156103eb57fe5b1415156103f757600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091508160010160009054906101000a900460ff168061045d57506002805490508360ff1610155b1561046757610530565b60018260010160006101000a81548160ff021916908315150217905550828260010160016101000a81548160ff021916908360ff160217905550816000015460028460ff168154811015156104b857fe5b9060005260206000200160000160008282540192505081905550601e6003540142111561052f5760036000806101000a81548160ff021916908360038111156104fd57fe5b02179055507f6ac0c89219f0135e3a87cecdf1851abced71da933a0a00e1eada0ef03538235160405160405180910390a15b5b505050565b6000809054906101000a900460ff16815600a165627a7a72305820ad262686ba06b2b1930dd8f18cbb175c477396f70abc65cc5eedc07bd53cf6710029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x144 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3C1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x130 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x152 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16C JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x221 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x22B JUMPI PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x2FE JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F8 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x316 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x330 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x3AF JUMPI DUP3 PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x368 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x38E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP3 POP DUP2 SWAP4 POP JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO ISZERO PUSH2 0x3BB JUMPI INVALID JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3D1 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3EB JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP2 POP DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x45D JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x467 JUMPI PUSH2 0x530 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4B8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x52F JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4FD JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x6AC0C89219F0135E3A87CECDF1851ABCED71DA933A0A00E1EADA0EF035382351 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xad 0x26 0x26 DUP7 0xba MOD 0xb2 0xb1 SWAP4 0xd 0xd8 CALL DUP13 0xbb OR 0x5c 0x47 PUSH20 0x96F70ABC65CC5EEDC07BD53CF671002900000000 ",
							"sourceMap": "25:2358:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:342;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1020:342:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1901:479;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1901:479:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1425:468;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1425:468:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;264:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;264:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:342;1073:9;535:8;526:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;518:26;;;;;;;;1158:11;;;;;;;;;;;1144:25;;:10;:25;;;;:50;;;;1173:6;:15;1180:7;1173:15;;;;;;;;;;;;;;;:21;;;;;;;;;;;;1144:50;1140:63;;;1196:7;;1140:63;1238:1;1213:6;:15;1220:7;1213:15;;;;;;;;;;;;;;;:22;;:26;;;;1274:5;1250:6;:15;1257:7;1250:15;;;;;;;;;;;;;;;:21;;;:29;;;;;;;;;;;;;;;;;;1312:10;1301:9;;:21;1294:3;:29;1290:57;;;1334:10;1326:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1290:57;553:1;1020:342;;:::o;1901:479::-;1976:22;2055:24;2099:10;1946;535:8;526:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;518:26;;;;;;;;2082:1;2055:28;;2112:1;2099:14;;2094:238;2122:9;:16;;;;2115:4;:23;;;2094:238;;;2193:16;2165:9;2175:4;2165:15;;;;;;;;;;;;;;;;;;;:25;;;:44;2161:171;;;2249:9;2259:4;2249:15;;;;;;;;;;;;;;;;;;;:25;;;2230:44;;2312:4;2293:23;;2161:171;2140:6;;;;;;;2094:238;;;2368:1;2349:16;:20;2341:29;;;;;;1901:479;;;;:::o;1425:468::-;1545:20;1475:10;535:8;526:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;518:26;;;;;;;;1568:6;:18;1575:10;1568:18;;;;;;;;;;;;;;;1545:41;;1601:6;:12;;;;;;;;;;;;:46;;;;1631:9;:16;;;;1617:10;:30;;;;1601:46;1597:59;;;1649:7;;1597:59;1681:4;1666:6;:12;;;:19;;;;;;;;;;;;;;;;;;1710:10;1696:6;:11;;;:24;;;;;;;;;;;;;;;;;;1769:6;:13;;;1734:9;1744:10;1734:21;;;;;;;;;;;;;;;;;;;:31;;;:48;;;;;;;;;;;1815:10;1804:9;;:21;1797:3;:29;1793:75;;;1837:10;1829:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1849:17;;;;;;;;;;1793:75;553:1;1425:468;;;:::o;264:31::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "279000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"register(address)": "62191",
								"stage()": "528",
								"vote(uint8)": "83801",
								"winningProposal()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 2383,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "MSTORE"
								},
								{
									"begin": 285,
									"end": 295,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "DUP1"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "EXP"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "DUP2"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "SLOAD"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "DUP2"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "MUL"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "NOT"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "AND"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "SWAP1"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "DUP4"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "DUP2"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "GT"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "ISZERO"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "JUMPI"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "INVALID"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "JUMPDEST"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "MUL"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "OR"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "SWAP1"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "SSTORE"
								},
								{
									"begin": 264,
									"end": 295,
									"name": "POP"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "POP"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "MLOAD"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "DUP1"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "PUSHSIZE"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "DUP4"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "CODECOPY"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "DUP2"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "ADD"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "DUP1"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "MSTORE"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "DUP2"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "ADD"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "SWAP1"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "DUP1"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "DUP1"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "MLOAD"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "SWAP1"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "ADD"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "SWAP1"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "SWAP3"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "SWAP2"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "SWAP1"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "POP"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "POP"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "POP"
								},
								{
									"begin": 714,
									"end": 724,
									"name": "CALLER"
								},
								{
									"begin": 700,
									"end": 711,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 700,
									"end": 711,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "EXP"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "DUP2"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "SLOAD"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "DUP2"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "MUL"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "NOT"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "AND"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "SWAP1"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "DUP4"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "AND"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "MUL"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "OR"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "SWAP1"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "SSTORE"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "POP"
								},
								{
									"begin": 764,
									"end": 765,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 735,
									"end": 741,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 735,
									"end": 754,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 742,
									"end": 753,
									"name": "DUP1"
								},
								{
									"begin": 742,
									"end": 753,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 742,
									"end": 753,
									"name": "SWAP1"
								},
								{
									"begin": 742,
									"end": 753,
									"name": "SLOAD"
								},
								{
									"begin": 742,
									"end": 753,
									"name": "SWAP1"
								},
								{
									"begin": 742,
									"end": 753,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 742,
									"end": 753,
									"name": "EXP"
								},
								{
									"begin": 742,
									"end": 753,
									"name": "SWAP1"
								},
								{
									"begin": 742,
									"end": 753,
									"name": "DIV"
								},
								{
									"begin": 742,
									"end": 753,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 742,
									"end": 753,
									"name": "AND"
								},
								{
									"begin": 735,
									"end": 754,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 735,
									"end": 754,
									"name": "AND"
								},
								{
									"begin": 735,
									"end": 754,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 735,
									"end": 754,
									"name": "AND"
								},
								{
									"begin": 735,
									"end": 754,
									"name": "DUP2"
								},
								{
									"begin": 735,
									"end": 754,
									"name": "MSTORE"
								},
								{
									"begin": 735,
									"end": 754,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 735,
									"end": 754,
									"name": "ADD"
								},
								{
									"begin": 735,
									"end": 754,
									"name": "SWAP1"
								},
								{
									"begin": 735,
									"end": 754,
									"name": "DUP2"
								},
								{
									"begin": 735,
									"end": 754,
									"name": "MSTORE"
								},
								{
									"begin": 735,
									"end": 754,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 735,
									"end": 754,
									"name": "ADD"
								},
								{
									"begin": 735,
									"end": 754,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 735,
									"end": 754,
									"name": "KECCAK256"
								},
								{
									"begin": 735,
									"end": 761,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 735,
									"end": 761,
									"name": "ADD"
								},
								{
									"begin": 735,
									"end": 765,
									"name": "DUP2"
								},
								{
									"begin": 735,
									"end": 765,
									"name": "SWAP1"
								},
								{
									"begin": 735,
									"end": 765,
									"name": "SSTORE"
								},
								{
									"begin": 735,
									"end": 765,
									"name": "POP"
								},
								{
									"begin": 831,
									"end": 844,
									"name": "DUP1"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "AND"
								},
								{
									"begin": 812,
									"end": 821,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "DUP2"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "SWAP2"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "SWAP1"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "JUMPDEST"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "POP"
								},
								{
									"begin": 863,
									"end": 872,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 855,
									"end": 860,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 855,
									"end": 860,
									"name": "DUP1"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "EXP"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "DUP2"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "SLOAD"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "DUP2"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "MUL"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "NOT"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "AND"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "SWAP1"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "DUP4"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "DUP2"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "GT"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "ISZERO"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "JUMPI"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "INVALID"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "JUMPDEST"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "MUL"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "OR"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "SWAP1"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "SSTORE"
								},
								{
									"begin": 855,
									"end": 872,
									"name": "POP"
								},
								{
									"begin": 895,
									"end": 898,
									"name": "TIMESTAMP"
								},
								{
									"begin": 883,
									"end": 892,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 883,
									"end": 898,
									"name": "DUP2"
								},
								{
									"begin": 883,
									"end": 898,
									"name": "SWAP1"
								},
								{
									"begin": 883,
									"end": 898,
									"name": "SSTORE"
								},
								{
									"begin": 883,
									"end": 898,
									"name": "POP"
								},
								{
									"begin": 644,
									"end": 906,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "JUMP"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "SLOAD"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "DUP4"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "SSTORE"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "GT"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "ISZERO"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "JUMPI"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "DUP4"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "MSTORE"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "KECCAK256"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "DUP3"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "DUP3"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "GT"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "ISZERO"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "JUMPI"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "DUP3"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "SSTORE"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "JUMP"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "JUMP"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2383,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820ad262686ba06b2b1930dd8f18cbb175c477396f70abc65cc5eedc07bd53cf6710029",
									".code": [
										{
											"begin": 25,
											"end": 2383,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "LT"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "DIV"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "AND"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "PUSH",
											"value": "609FF1BD"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "PUSH",
											"value": "B3F98ADC"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "PUSH",
											"value": "C040E6B8"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2383,
											"name": "REVERT"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "JUMPDEST"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "POP"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "DUP1"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "SUB"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "DUP2"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "ADD"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "SWAP1"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "DUP1"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "DUP1"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "AND"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "SWAP1"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "ADD"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "SWAP1"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "SWAP3"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "SWAP2"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "SWAP1"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "POP"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "POP"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "POP"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "JUMP"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "JUMPDEST"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "STOP"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "JUMPDEST"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "POP"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "JUMP"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "JUMPDEST"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "MLOAD"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "DUP1"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "DUP3"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "AND"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "AND"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "DUP2"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "MSTORE"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "ADD"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "SWAP2"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "POP"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "POP"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "MLOAD"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "DUP1"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "SWAP2"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "SUB"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "SWAP1"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "RETURN"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "JUMPDEST"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "DUP1"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "SUB"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "DUP2"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "ADD"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "SWAP1"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "DUP1"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "DUP1"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "AND"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "SWAP1"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "ADD"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "SWAP1"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "SWAP3"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "SWAP2"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "SWAP1"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "JUMP"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "JUMPDEST"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "STOP"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "JUMP"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "MLOAD"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "GT"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "ISZERO"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "JUMPI"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "INVALID"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "AND"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "MSTORE"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "MLOAD"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "SUB"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "RETURN"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "JUMPDEST"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 535,
											"end": 543,
											"name": "DUP1"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "DUP2"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "GT"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "ISZERO"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "JUMPI"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "INVALID"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "JUMPDEST"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "DUP1"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "SWAP1"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "SLOAD"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "SWAP1"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "EXP"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "SWAP1"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "DIV"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "AND"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "DUP2"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "GT"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "ISZERO"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "JUMPI"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "INVALID"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "JUMPDEST"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "EQ"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "ISZERO"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "ISZERO"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "JUMPI"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "REVERT"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "JUMPDEST"
										},
										{
											"begin": 1158,
											"end": 1169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1169,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1158,
											"end": 1169,
											"name": "SWAP1"
										},
										{
											"begin": 1158,
											"end": 1169,
											"name": "SLOAD"
										},
										{
											"begin": 1158,
											"end": 1169,
											"name": "SWAP1"
										},
										{
											"begin": 1158,
											"end": 1169,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1158,
											"end": 1169,
											"name": "EXP"
										},
										{
											"begin": 1158,
											"end": 1169,
											"name": "SWAP1"
										},
										{
											"begin": 1158,
											"end": 1169,
											"name": "DIV"
										},
										{
											"begin": 1158,
											"end": 1169,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1158,
											"end": 1169,
											"name": "AND"
										},
										{
											"begin": 1144,
											"end": 1169,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1144,
											"end": 1169,
											"name": "AND"
										},
										{
											"begin": 1144,
											"end": 1154,
											"name": "CALLER"
										},
										{
											"begin": 1144,
											"end": 1169,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1144,
											"end": 1169,
											"name": "AND"
										},
										{
											"begin": 1144,
											"end": 1169,
											"name": "EQ"
										},
										{
											"begin": 1144,
											"end": 1169,
											"name": "ISZERO"
										},
										{
											"begin": 1144,
											"end": 1194,
											"name": "DUP1"
										},
										{
											"begin": 1144,
											"end": 1194,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1144,
											"end": 1194,
											"name": "JUMPI"
										},
										{
											"begin": 1144,
											"end": 1194,
											"name": "POP"
										},
										{
											"begin": 1173,
											"end": 1179,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1187,
											"name": "DUP4"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "AND"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "AND"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "DUP2"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "MSTORE"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "ADD"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "SWAP1"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "DUP2"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "MSTORE"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "ADD"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "KECCAK256"
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "ADD"
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "SWAP1"
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "SLOAD"
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "SWAP1"
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "EXP"
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "SWAP1"
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "DIV"
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "AND"
										},
										{
											"begin": 1144,
											"end": 1194,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1144,
											"end": 1194,
											"name": "JUMPDEST"
										},
										{
											"begin": 1140,
											"end": 1203,
											"name": "ISZERO"
										},
										{
											"begin": 1140,
											"end": 1203,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1140,
											"end": 1203,
											"name": "JUMPI"
										},
										{
											"begin": 1196,
											"end": 1203,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1196,
											"end": 1203,
											"name": "JUMP"
										},
										{
											"begin": 1140,
											"end": 1203,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1140,
											"end": 1203,
											"name": "JUMPDEST"
										},
										{
											"begin": 1238,
											"end": 1239,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "DUP1"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1227,
											"name": "DUP5"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "AND"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "AND"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "DUP2"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "MSTORE"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "ADD"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "SWAP1"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "DUP2"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "MSTORE"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "ADD"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "KECCAK256"
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "ADD"
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "DUP2"
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "SWAP1"
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "SSTORE"
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1279,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1256,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1250,
											"end": 1265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1264,
											"name": "DUP5"
										},
										{
											"begin": 1250,
											"end": 1265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1250,
											"end": 1265,
											"name": "AND"
										},
										{
											"begin": 1250,
											"end": 1265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1250,
											"end": 1265,
											"name": "AND"
										},
										{
											"begin": 1250,
											"end": 1265,
											"name": "DUP2"
										},
										{
											"begin": 1250,
											"end": 1265,
											"name": "MSTORE"
										},
										{
											"begin": 1250,
											"end": 1265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1265,
											"name": "ADD"
										},
										{
											"begin": 1250,
											"end": 1265,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1265,
											"name": "DUP2"
										},
										{
											"begin": 1250,
											"end": 1265,
											"name": "MSTORE"
										},
										{
											"begin": 1250,
											"end": 1265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1265,
											"name": "ADD"
										},
										{
											"begin": 1250,
											"end": 1265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1265,
											"name": "KECCAK256"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "ADD"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1279,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1250,
											"end": 1279,
											"name": "EXP"
										},
										{
											"begin": 1250,
											"end": 1279,
											"name": "DUP2"
										},
										{
											"begin": 1250,
											"end": 1279,
											"name": "SLOAD"
										},
										{
											"begin": 1250,
											"end": 1279,
											"name": "DUP2"
										},
										{
											"begin": 1250,
											"end": 1279,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1250,
											"end": 1279,
											"name": "MUL"
										},
										{
											"begin": 1250,
											"end": 1279,
											"name": "NOT"
										},
										{
											"begin": 1250,
											"end": 1279,
											"name": "AND"
										},
										{
											"begin": 1250,
											"end": 1279,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1279,
											"name": "DUP4"
										},
										{
											"begin": 1250,
											"end": 1279,
											"name": "ISZERO"
										},
										{
											"begin": 1250,
											"end": 1279,
											"name": "ISZERO"
										},
										{
											"begin": 1250,
											"end": 1279,
											"name": "MUL"
										},
										{
											"begin": 1250,
											"end": 1279,
											"name": "OR"
										},
										{
											"begin": 1250,
											"end": 1279,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1279,
											"name": "SSTORE"
										},
										{
											"begin": 1250,
											"end": 1279,
											"name": "POP"
										},
										{
											"begin": 1312,
											"end": 1322,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1301,
											"end": 1310,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1301,
											"end": 1310,
											"name": "SLOAD"
										},
										{
											"begin": 1301,
											"end": 1322,
											"name": "ADD"
										},
										{
											"begin": 1294,
											"end": 1297,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1294,
											"end": 1323,
											"name": "GT"
										},
										{
											"begin": 1290,
											"end": 1347,
											"name": "ISZERO"
										},
										{
											"begin": 1290,
											"end": 1347,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1290,
											"end": 1347,
											"name": "JUMPI"
										},
										{
											"begin": 1334,
											"end": 1344,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1326,
											"end": 1331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1326,
											"end": 1331,
											"name": "DUP1"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "EXP"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "DUP2"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "SLOAD"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "DUP2"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "MUL"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "NOT"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "AND"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "SWAP1"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "DUP4"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "DUP2"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "GT"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "ISZERO"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "JUMPI"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "INVALID"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "JUMPDEST"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "MUL"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "OR"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "SWAP1"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "SSTORE"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "POP"
										},
										{
											"begin": 1290,
											"end": 1347,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1290,
											"end": 1347,
											"name": "JUMPDEST"
										},
										{
											"begin": 553,
											"end": 554,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 553,
											"end": 554,
											"name": "JUMPDEST"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "POP"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "POP"
										},
										{
											"begin": 1020,
											"end": 1362,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "JUMPDEST"
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "DUP1"
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 1956,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 535,
											"end": 543,
											"name": "DUP1"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "DUP2"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "GT"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "ISZERO"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "JUMPI"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "INVALID"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "JUMPDEST"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "DUP1"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "SWAP1"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "SLOAD"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "SWAP1"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "EXP"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "SWAP1"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "DIV"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "AND"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "DUP2"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "GT"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "ISZERO"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "JUMPI"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "INVALID"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "JUMPDEST"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "EQ"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "ISZERO"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "ISZERO"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "JUMPI"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "REVERT"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "JUMPDEST"
										},
										{
											"begin": 2082,
											"end": 2083,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2083,
											"name": "SWAP3"
										},
										{
											"begin": 2055,
											"end": 2083,
											"name": "POP"
										},
										{
											"begin": 2112,
											"end": 2113,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2099,
											"end": 2113,
											"name": "SWAP2"
										},
										{
											"begin": 2099,
											"end": 2113,
											"name": "POP"
										},
										{
											"begin": 2094,
											"end": 2332,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2094,
											"end": 2332,
											"name": "JUMPDEST"
										},
										{
											"begin": 2122,
											"end": 2131,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "DUP1"
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "SLOAD"
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "SWAP1"
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "POP"
										},
										{
											"begin": 2115,
											"end": 2119,
											"name": "DUP3"
										},
										{
											"begin": 2115,
											"end": 2138,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2115,
											"end": 2138,
											"name": "AND"
										},
										{
											"begin": 2115,
											"end": 2138,
											"name": "LT"
										},
										{
											"begin": 2094,
											"end": 2332,
											"name": "ISZERO"
										},
										{
											"begin": 2094,
											"end": 2332,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2094,
											"end": 2332,
											"name": "JUMPI"
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "DUP3"
										},
										{
											"begin": 2165,
											"end": 2174,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2175,
											"end": 2179,
											"name": "DUP4"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "AND"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "DUP2"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "SLOAD"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "DUP2"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "LT"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "ISZERO"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "ISZERO"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "JUMPI"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "INVALID"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "JUMPDEST"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "SWAP1"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "MSTORE"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "KECCAK256"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "ADD"
										},
										{
											"begin": 2165,
											"end": 2190,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2190,
											"name": "ADD"
										},
										{
											"begin": 2165,
											"end": 2190,
											"name": "SLOAD"
										},
										{
											"begin": 2165,
											"end": 2209,
											"name": "GT"
										},
										{
											"begin": 2161,
											"end": 2332,
											"name": "ISZERO"
										},
										{
											"begin": 2161,
											"end": 2332,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2161,
											"end": 2332,
											"name": "JUMPI"
										},
										{
											"begin": 2249,
											"end": 2258,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2259,
											"end": 2263,
											"name": "DUP3"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "AND"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "DUP2"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "SLOAD"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "DUP2"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "LT"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "ISZERO"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "ISZERO"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "JUMPI"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "INVALID"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "JUMPDEST"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "SWAP1"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "MSTORE"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "KECCAK256"
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "ADD"
										},
										{
											"begin": 2249,
											"end": 2274,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2274,
											"name": "ADD"
										},
										{
											"begin": 2249,
											"end": 2274,
											"name": "SLOAD"
										},
										{
											"begin": 2230,
											"end": 2274,
											"name": "SWAP3"
										},
										{
											"begin": 2230,
											"end": 2274,
											"name": "POP"
										},
										{
											"begin": 2312,
											"end": 2316,
											"name": "DUP2"
										},
										{
											"begin": 2293,
											"end": 2316,
											"name": "SWAP4"
										},
										{
											"begin": 2293,
											"end": 2316,
											"name": "POP"
										},
										{
											"begin": 2161,
											"end": 2332,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2161,
											"end": 2332,
											"name": "JUMPDEST"
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "DUP2"
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "DUP1"
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "ADD"
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "SWAP3"
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "POP"
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "POP"
										},
										{
											"begin": 2094,
											"end": 2332,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2094,
											"end": 2332,
											"name": "JUMP"
										},
										{
											"begin": 2094,
											"end": 2332,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2094,
											"end": 2332,
											"name": "JUMPDEST"
										},
										{
											"begin": 2368,
											"end": 2369,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2365,
											"name": "DUP4"
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "GT"
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "ISZERO"
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "ISZERO"
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "JUMPI"
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "INVALID"
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "JUMPDEST"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "POP"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "POP"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "POP"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "SWAP1"
										},
										{
											"begin": 1901,
											"end": 2380,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "JUMPDEST"
										},
										{
											"begin": 1545,
											"end": 1565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1485,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 535,
											"end": 543,
											"name": "DUP1"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "DUP2"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "GT"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "ISZERO"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "JUMPI"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "INVALID"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "JUMPDEST"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "DUP1"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "SWAP1"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "SLOAD"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "SWAP1"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "EXP"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "SWAP1"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "DIV"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "AND"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "DUP2"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "GT"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "ISZERO"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "JUMPI"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "INVALID"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "JUMPDEST"
										},
										{
											"begin": 526,
											"end": 543,
											"name": "EQ"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "ISZERO"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "ISZERO"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "JUMPI"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "REVERT"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "JUMPDEST"
										},
										{
											"begin": 1568,
											"end": 1574,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1585,
											"name": "CALLER"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "AND"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "AND"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "SWAP1"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "KECCAK256"
										},
										{
											"begin": 1545,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1545,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1601,
											"end": 1607,
											"name": "DUP2"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "ADD"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "SLOAD"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "EXP"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "DIV"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1601,
											"end": 1647,
											"name": "DUP1"
										},
										{
											"begin": 1601,
											"end": 1647,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1601,
											"end": 1647,
											"name": "JUMPI"
										},
										{
											"begin": 1601,
											"end": 1647,
											"name": "POP"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "DUP1"
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "SLOAD"
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "SWAP1"
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "POP"
										},
										{
											"begin": 1617,
											"end": 1627,
											"name": "DUP4"
										},
										{
											"begin": 1617,
											"end": 1647,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1617,
											"end": 1647,
											"name": "AND"
										},
										{
											"begin": 1617,
											"end": 1647,
											"name": "LT"
										},
										{
											"begin": 1617,
											"end": 1647,
											"name": "ISZERO"
										},
										{
											"begin": 1601,
											"end": 1647,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1601,
											"end": 1647,
											"name": "JUMPDEST"
										},
										{
											"begin": 1597,
											"end": 1656,
											"name": "ISZERO"
										},
										{
											"begin": 1597,
											"end": 1656,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1597,
											"end": 1656,
											"name": "JUMPI"
										},
										{
											"begin": 1649,
											"end": 1656,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1649,
											"end": 1656,
											"name": "JUMP"
										},
										{
											"begin": 1597,
											"end": 1656,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1597,
											"end": 1656,
											"name": "JUMPDEST"
										},
										{
											"begin": 1681,
											"end": 1685,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1666,
											"end": 1672,
											"name": "DUP3"
										},
										{
											"begin": 1666,
											"end": 1678,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1666,
											"end": 1678,
											"name": "ADD"
										},
										{
											"begin": 1666,
											"end": 1678,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "EXP"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "DUP2"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "SLOAD"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "DUP2"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "MUL"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "NOT"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "AND"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "SWAP1"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "DUP4"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "ISZERO"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "ISZERO"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "MUL"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "OR"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "SWAP1"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "SSTORE"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "POP"
										},
										{
											"begin": 1710,
											"end": 1720,
											"name": "DUP3"
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "DUP3"
										},
										{
											"begin": 1696,
											"end": 1707,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1696,
											"end": 1707,
											"name": "ADD"
										},
										{
											"begin": 1696,
											"end": 1707,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1696,
											"end": 1720,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1696,
											"end": 1720,
											"name": "EXP"
										},
										{
											"begin": 1696,
											"end": 1720,
											"name": "DUP2"
										},
										{
											"begin": 1696,
											"end": 1720,
											"name": "SLOAD"
										},
										{
											"begin": 1696,
											"end": 1720,
											"name": "DUP2"
										},
										{
											"begin": 1696,
											"end": 1720,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1696,
											"end": 1720,
											"name": "MUL"
										},
										{
											"begin": 1696,
											"end": 1720,
											"name": "NOT"
										},
										{
											"begin": 1696,
											"end": 1720,
											"name": "AND"
										},
										{
											"begin": 1696,
											"end": 1720,
											"name": "SWAP1"
										},
										{
											"begin": 1696,
											"end": 1720,
											"name": "DUP4"
										},
										{
											"begin": 1696,
											"end": 1720,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1696,
											"end": 1720,
											"name": "AND"
										},
										{
											"begin": 1696,
											"end": 1720,
											"name": "MUL"
										},
										{
											"begin": 1696,
											"end": 1720,
											"name": "OR"
										},
										{
											"begin": 1696,
											"end": 1720,
											"name": "SWAP1"
										},
										{
											"begin": 1696,
											"end": 1720,
											"name": "SSTORE"
										},
										{
											"begin": 1696,
											"end": 1720,
											"name": "POP"
										},
										{
											"begin": 1769,
											"end": 1775,
											"name": "DUP2"
										},
										{
											"begin": 1769,
											"end": 1782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1782,
											"name": "ADD"
										},
										{
											"begin": 1769,
											"end": 1782,
											"name": "SLOAD"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1744,
											"end": 1754,
											"name": "DUP5"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "AND"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "DUP2"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "SLOAD"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "DUP2"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "LT"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "ISZERO"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "ISZERO"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "JUMPI"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "INVALID"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "JUMPDEST"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "SWAP1"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "MSTORE"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "KECCAK256"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "ADD"
										},
										{
											"begin": 1734,
											"end": 1765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1765,
											"name": "ADD"
										},
										{
											"begin": 1734,
											"end": 1765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1782,
											"name": "DUP3"
										},
										{
											"begin": 1734,
											"end": 1782,
											"name": "DUP3"
										},
										{
											"begin": 1734,
											"end": 1782,
											"name": "SLOAD"
										},
										{
											"begin": 1734,
											"end": 1782,
											"name": "ADD"
										},
										{
											"begin": 1734,
											"end": 1782,
											"name": "SWAP3"
										},
										{
											"begin": 1734,
											"end": 1782,
											"name": "POP"
										},
										{
											"begin": 1734,
											"end": 1782,
											"name": "POP"
										},
										{
											"begin": 1734,
											"end": 1782,
											"name": "DUP2"
										},
										{
											"begin": 1734,
											"end": 1782,
											"name": "SWAP1"
										},
										{
											"begin": 1734,
											"end": 1782,
											"name": "SSTORE"
										},
										{
											"begin": 1734,
											"end": 1782,
											"name": "POP"
										},
										{
											"begin": 1815,
											"end": 1825,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1804,
											"end": 1813,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1804,
											"end": 1813,
											"name": "SLOAD"
										},
										{
											"begin": 1804,
											"end": 1825,
											"name": "ADD"
										},
										{
											"begin": 1797,
											"end": 1800,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "GT"
										},
										{
											"begin": 1793,
											"end": 1868,
											"name": "ISZERO"
										},
										{
											"begin": 1793,
											"end": 1868,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1793,
											"end": 1868,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1847,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1829,
											"end": 1834,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1834,
											"name": "DUP1"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "EXP"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "DUP2"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "SLOAD"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "DUP2"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "MUL"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "NOT"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "AND"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "SWAP1"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "DUP4"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "DUP2"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "GT"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "ISZERO"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "JUMPI"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "INVALID"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "JUMPDEST"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "MUL"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "OR"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "SWAP1"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "SSTORE"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "POP"
										},
										{
											"begin": 1849,
											"end": 1866,
											"name": "PUSH",
											"value": "6AC0C89219F0135E3A87CECDF1851ABCED71DA933A0A00E1EADA0EF035382351"
										},
										{
											"begin": 1849,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1849,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1849,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1849,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1849,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1849,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1849,
											"end": 1866,
											"name": "LOG1"
										},
										{
											"begin": 1793,
											"end": 1868,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1793,
											"end": 1868,
											"name": "JUMPDEST"
										},
										{
											"begin": 553,
											"end": 554,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 553,
											"end": 554,
											"name": "JUMPDEST"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1425,
											"end": 1893,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "SLOAD"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "EXP"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "DIV"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "AND"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"register(address)": "4420e486",
							"stage()": "c040e6b8",
							"vote(uint8)": "b3f98adc",
							"winningProposal()": "609ff1bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"toVoter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"name\":\"_winningProposal\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toProposal\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_numProposals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"votingCompleted\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"register(address)\":{\"notice\":\"May only be called by $(chairperson).\"},\"vote(uint8)\":{\"notice\":\"Give a single vote to proposal $(toProposal).\"}}}},\"settings\":{\"compilationTarget\":{\"ballotwithmodifier.sol\":\"Ballot\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ballotwithmodifier.sol\":{\"keccak256\":\"0x038f58b0833db04e0dd7353cffc86372781febc4e37c2b8ad75d0842425f1f01\",\"urls\":[\"bzzr://5c4c7f365505ec68ed9e4ab9b8a328aa57f2834b5709f7325f3a23d54b9ab888\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"register(address)": {
								"notice": "May only be called by $(chairperson)."
							},
							"vote(uint8)": {
								"notice": "Give a single vote to proposal $(toProposal)."
							}
						}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "ballotwithmodifier.sol:31:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Ballot(uint8 _numProposals) public  {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 906,
					"file": "ballotwithmodifier.sol",
					"start": 644
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "ballotwithmodifier.sol:57:65: Warning: Invoking events without \"emit\" prefix is deprecated.\n        if (now > (startTime+ 30 seconds)) {stage = Stage.Done; votingCompleted();}        \r\n                                                                ^---------------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1866,
					"file": "ballotwithmodifier.sol",
					"start": 1849
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ballotwithmodifier.sol": {
				"ast": {
					"absolutePath": "ballotwithmodifier.sol",
					"exportedSymbols": {
						"Ballot": [
							240
						]
					},
					"id": 241,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 240,
							"linearizedBaseContracts": [
								240
							],
							"name": "Ballot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "74:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "74:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "96:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "96:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "117:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 6,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "117:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 240,
									"src": "50:114:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "197:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "197:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 240,
									"src": "170:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Stage",
									"id": 16,
									"members": [
										{
											"id": 12,
											"name": "Init",
											"nodeType": "EnumValue",
											"src": "237:4:0"
										},
										{
											"id": 13,
											"name": "Reg",
											"nodeType": "EnumValue",
											"src": "242:3:0"
										},
										{
											"id": 14,
											"name": "Vote",
											"nodeType": "EnumValue",
											"src": "247:4:0"
										},
										{
											"id": 15,
											"name": "Done",
											"nodeType": "EnumValue",
											"src": "253:4:0"
										}
									],
									"name": "Stage",
									"nodeType": "EnumDefinition",
									"src": "225:33:0"
								},
								{
									"constant": false,
									"id": 20,
									"name": "stage",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "264:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Stage_$16",
										"typeString": "enum Ballot.Stage"
									},
									"typeName": {
										"contractScope": null,
										"id": 17,
										"name": "Stage",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 16,
										"src": "264:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$16",
											"typeString": "enum Ballot.Stage"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"id": 18,
											"name": "Stage",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 16,
											"src": "285:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
												"typeString": "type(enum Ballot.Stage)"
											}
										},
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "Init",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "285:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$16",
											"typeString": "enum Ballot.Stage"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "308:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 21,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "308:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 26,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "334:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "342:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "334:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 24,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "353:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 29,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "373:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 27,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 11,
											"src": "373:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$11_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 28,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "373:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 31,
									"name": "votingCompleted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:0"
									},
									"src": "402:24:0"
								},
								{
									"constant": false,
									"id": 33,
									"name": "startTime",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "438:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 32,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "438:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "516:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_Stage_$16",
																"typeString": "enum Ballot.Stage"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 38,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "526:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 39,
																"name": "reqStage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 35,
																"src": "535:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"src": "526:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 37,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															258,
															259
														],
														"referencedDeclaration": 258,
														"src": "518:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "518:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "518:26:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "553:1:0"
											}
										]
									},
									"documentation": null,
									"id": 45,
									"name": "validStage",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "reqStage",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "495:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Stage_$16",
													"typeString": "enum Ballot.Stage"
												},
												"typeName": {
													"contractScope": null,
													"id": 34,
													"name": "Stage",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 16,
													"src": "495:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "494:16:0"
									},
									"src": "475:87:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "689:217:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 50,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "700:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 51,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "714:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "714:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "700:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "700:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 55,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "735:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 57,
															"indexExpression": {
																"argumentTypes": null,
																"id": 56,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "742:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "735:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "735:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "764:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "735:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "735:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 62,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "812:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "812:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 65,
														"name": "_numProposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "831:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "812:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "812:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 68,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "855:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 69,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "863:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Reg",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "863:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "855:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "855:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 73,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "883:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 74,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "895:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "883:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "883:15:0"
											}
										]
									},
									"documentation": "Create a new ballot with $(_numProposals) different proposals.",
									"id": 78,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Ballot",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"name": "_numProposals",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "660:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 46,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "660:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "659:21:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:0:0"
									},
									"scope": 240,
									"src": "644:262:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "1084:278:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 87,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "1144:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1144:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 89,
															"name": "chairperson",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "1158:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1144:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 91,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1173:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 93,
															"indexExpression": {
																"argumentTypes": null,
																"id": 92,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1180:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1173:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1173:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1144:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 97,
												"nodeType": "IfStatement",
												"src": "1140:63:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 86,
													"id": 96,
													"nodeType": "Return",
													"src": "1196:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 98,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1213:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 100,
															"indexExpression": {
																"argumentTypes": null,
																"id": 99,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1220:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1213:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1213:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1238:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1213:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1213:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 105,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1250:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 107,
															"indexExpression": {
																"argumentTypes": null,
																"id": 106,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1257:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1250:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1250:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1274:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1250:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1250:29:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 112,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1294:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 113,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "1301:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3330",
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1312:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "1301:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 116,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1300:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1294:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 124,
												"nodeType": "IfStatement",
												"src": "1290:57:0",
												"trueBody": {
													"id": 123,
													"nodeType": "Block",
													"src": "1325:22:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 118,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1326:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 119,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "1334:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																			"typeString": "type(enum Ballot.Stage)"
																		}
																	},
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Vote",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1334:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"src": "1326:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"id": 122,
															"nodeType": "ExpressionStatement",
															"src": "1326:18:0"
														}
													]
												}
											}
										]
									},
									"documentation": "May only be called by $(chairperson).",
									"id": 126,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 83,
														"name": "Stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1073:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
															"typeString": "type(enum Ballot.Stage)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Reg",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1073:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												}
											],
											"id": 85,
											"modifierName": {
												"argumentTypes": null,
												"id": 82,
												"name": "validStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 45,
												"src": "1062:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stage_$16_$",
													"typeString": "modifier (enum Ballot.Stage)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1062:21:0"
										}
									],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"name": "toVoter",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1038:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1037:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1084:0:0"
									},
									"scope": 240,
									"src": "1020:342:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1488:405:0",
										"statements": [
											{
												"assignments": [
													136
												],
												"declarations": [
													{
														"constant": false,
														"id": 136,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"scope": 188,
														"src": "1545:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 135,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 8,
															"src": "1545:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 141,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 137,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1568:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 140,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 138,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "1575:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1575:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1568:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$8_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1545:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 142,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "1601:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1601:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 144,
															"name": "toProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "1617:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 145,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1631:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1631:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1617:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1601:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 150,
												"nodeType": "IfStatement",
												"src": "1597:59:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 134,
													"id": 149,
													"nodeType": "Return",
													"src": "1649:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 151,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "1666:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 153,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1666:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1681:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1666:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "1666:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 157,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "1696:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 159,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1696:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 160,
														"name": "toProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "1710:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1696:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "1696:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 163,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1734:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 165,
															"indexExpression": {
																"argumentTypes": null,
																"id": 164,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "1744:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1734:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$11_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 166,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1734:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 167,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "1769:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 168,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1769:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1734:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "1734:48:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 171,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1797:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 172,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "1804:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3330",
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1815:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "1804:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 175,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1803:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1797:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 186,
												"nodeType": "IfStatement",
												"src": "1793:75:0",
												"trueBody": {
													"id": 185,
													"nodeType": "Block",
													"src": "1828:40:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 177,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1829:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 178,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "1837:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																			"typeString": "type(enum Ballot.Stage)"
																		}
																	},
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Done",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1837:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"src": "1829:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"id": 181,
															"nodeType": "ExpressionStatement",
															"src": "1829:18:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 182,
																	"name": "votingCompleted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "1849:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1849:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 184,
															"nodeType": "ExpressionStatement",
															"src": "1849:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": "Give a single vote to proposal $(toProposal).",
									"id": 188,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 131,
														"name": "Stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1475:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
															"typeString": "type(enum Ballot.Stage)"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Vote",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1475:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												}
											],
											"id": 133,
											"modifierName": {
												"argumentTypes": null,
												"id": 130,
												"name": "validStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 45,
												"src": "1464:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stage_$16_$",
													"typeString": "modifier (enum Ballot.Stage)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1464:22:0"
										}
									],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"name": "toProposal",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1439:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 127,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1439:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1438:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1488:0:0"
									},
									"scope": 240,
									"src": "1425:468:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "2000:380:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "winningVoteCount",
														"nodeType": "VariableDeclaration",
														"scope": 239,
														"src": "2055:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2055:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 200,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2082:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2055:28:0"
											},
											{
												"body": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 212,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "2165:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																		"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																	}
																},
																"id": 214,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 213,
																	"name": "prop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "2175:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2165:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$11_storage",
																	"typeString": "struct Ballot.Proposal storage ref"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voteCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "2165:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 216,
															"name": "winningVoteCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2193:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2165:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 230,
													"nodeType": "IfStatement",
													"src": "2161:171:0",
													"trueBody": {
														"id": 229,
														"nodeType": "Block",
														"src": "2211:121:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 218,
																		"name": "winningVoteCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 198,
																		"src": "2230:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 219,
																				"name": "proposals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 29,
																				"src": "2249:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																					"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																				}
																			},
																			"id": 221,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 220,
																				"name": "prop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 202,
																				"src": "2259:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2249:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$11_storage",
																				"typeString": "struct Ballot.Proposal storage ref"
																			}
																		},
																		"id": 222,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voteCount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 10,
																		"src": "2249:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2230:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 224,
																"nodeType": "ExpressionStatement",
																"src": "2230:44:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 225,
																		"name": "_winningProposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "2293:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 226,
																		"name": "prop",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "2312:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2293:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 228,
																"nodeType": "ExpressionStatement",
																"src": "2293:23:0"
															}
														]
													}
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 205,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "2115:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 206,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2122:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2122:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2115:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 231,
												"initializationExpression": {
													"assignments": [
														202
													],
													"declarations": [
														{
															"constant": false,
															"id": 202,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"scope": 239,
															"src": "2099:10:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 201,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "2099:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 204,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2112:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2099:14:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2140:6:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 209,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "2140:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 211,
													"nodeType": "ExpressionStatement",
													"src": "2140:6:0"
												},
												"nodeType": "ForStatement",
												"src": "2094:238:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 233,
																"name": "winningVoteCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2349:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2368:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2349:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 232,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "2341:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2341:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "2341:29:0"
											}
										]
									},
									"documentation": null,
									"id": 239,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 191,
														"name": "Stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1946:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
															"typeString": "type(enum Ballot.Stage)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Done",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1946:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												}
											],
											"id": 193,
											"modifierName": {
												"argumentTypes": null,
												"id": 190,
												"name": "validStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 45,
												"src": "1935:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stage_$16_$",
													"typeString": "modifier (enum Ballot.Stage)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1935:22:0"
										}
									],
									"name": "winningProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1925:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"name": "_winningProposal",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1976:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 194,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1976:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1975:24:0"
									},
									"scope": 240,
									"src": "1901:479:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 241,
							"src": "25:2358:0"
						}
					],
					"src": "0:2391:0"
				},
				"id": 0
			}
		}
	}
}