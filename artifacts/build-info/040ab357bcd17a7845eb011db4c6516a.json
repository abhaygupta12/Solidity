{
	"id": "040ab357bcd17a7845eb011db4c6516a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"balletbasic.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.4.0;\r\ncontract Ballot {\r\n\r\n    struct Voter {\r\n        uint weight;\r\n        bool voted;\r\n        uint8 vote;\r\n       // address delegate;\r\n    }\r\n    struct Proposal {\r\n        uint voteCount; // could add other data about proposal\r\n    }\r\n\r\n    address chairperson;\r\n    mapping(address => Voter) voters;\r\n    Proposal[] proposals;\r\n    \r\n\r\n    /// Create a new ballot with $(_numProposals) different proposals.\r\n    function Ballot(uint8 _numProposals) public {\r\n        chairperson = msg.sender;\r\n        voters[chairperson].weight = 2;\r\n        proposals.length = _numProposals; \r\n    }\r\n\r\n    /// Give $(toVoter) the right to vote on this ballot.\r\n    /// May only be called by $(chairperson).\r\n    function register(address toVoter) public {\r\n        if (msg.sender != chairperson || voters[toVoter].voted) return;\r\n        voters[toVoter].weight = 1;\r\n        voters[toVoter].voted = false;\r\n    }\r\n\r\n    /// Give a single vote to proposal $(toProposal).\r\n    function vote(uint8 toProposal) public {\r\n        Voter storage sender = voters[msg.sender];\r\n        if (sender.voted || toProposal >= proposals.length) return;\r\n        sender.voted = true;\r\n        sender.vote = toProposal;\r\n        proposals[toProposal].voteCount += sender.weight;\r\n    }\r\n\r\n    function winningProposal() public constant returns (uint8 _winningProposal) {\r\n        uint256 winningVoteCount = 0;\r\n        for (uint8 prop = 0; prop < proposals.length; prop++)\r\n            if (proposals[prop].voteCount > winningVoteCount) {\r\n                winningVoteCount = proposals[prop].voteCount;\r\n                _winningProposal = prop;\r\n            }\r\n    }\r\n}\r\n \r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"balletbasic.sol": {
				"Ballot": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "toVoter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "winningProposal",
							"outputs": [
								{
									"name": "_winningProposal",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "toProposal",
									"type": "uint8"
								}
							],
							"name": "vote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_numProposals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"balletbasic.sol\":58:1694  contract Ballot {\r... */\n  mstore(0x40, 0x80)\n    /* \"balletbasic.sol\":471:643  function Ballot(uint8 _numProposals) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"balletbasic.sol\":471:643  function Ballot(uint8 _numProposals) public {\r... */\n  pop\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"balletbasic.sol\":540:550  msg.sender */\n  caller\n    /* \"balletbasic.sol\":526:537  chairperson */\n  0x0\n  dup1\n    /* \"balletbasic.sol\":526:550  chairperson = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"balletbasic.sol\":590:591  2 */\n  0x2\n    /* \"balletbasic.sol\":561:567  voters */\n  0x1\n    /* \"balletbasic.sol\":561:580  voters[chairperson] */\n  0x0\n    /* \"balletbasic.sol\":568:579  chairperson */\n  dup1\n  0x0\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"balletbasic.sol\":561:580  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"balletbasic.sol\":561:587  voters[chairperson].weight */\n  0x0\n  add\n    /* \"balletbasic.sol\":561:591  voters[chairperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"balletbasic.sol\":621:634  _numProposals */\n  dup1\n    /* \"balletbasic.sol\":602:634  proposals.length = _numProposals */\n  0xff\n  and\n    /* \"balletbasic.sol\":602:611  proposals */\n  0x2\n    /* \"balletbasic.sol\":602:634  proposals.length = _numProposals */\n  dup2\n  tag_4\n  swap2\n  swap1\n  jump\t// in(tag_5)\ntag_4:\n  pop\n    /* \"balletbasic.sol\":471:643  function Ballot(uint8 _numProposals) public {\r... */\n  pop\n    /* \"balletbasic.sol\":58:1694  contract Ballot {\r... */\n  jump(tag_6)\ntag_5:\n  dup2\n  sload\n  dup2\n  dup4\n  sstore\n  dup2\n  dup2\n  gt\n  iszero\n  tag_7\n  jumpi\n  dup2\n  dup4\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap2\n  dup3\n  add\n  swap2\n  add\n  tag_8\n  swap2\n  swap1\n  jump\t// in(tag_9)\ntag_8:\ntag_7:\n  pop\n  pop\n  pop\n  jump\t// out\ntag_9:\n  tag_10\n  swap2\n  swap1\ntag_11:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_12\n  jumpi\n  0x0\n  dup1\n  dup3\n  add\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_11)\ntag_12:\n  pop\n  swap1\n  jump\ntag_10:\n  swap1\n  jump\t// out\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"balletbasic.sol\":58:1694  contract Ballot {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x4420e486\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x609ff1bd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb3f98adc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"balletbasic.sol\":757:957  function register(address toVoter) public {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_5:\n        /* \"balletbasic.sol\":757:957  function register(address toVoter) public {\r... */\n      pop\n      tag_6\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_7)\n    tag_6:\n      stop\n        /* \"balletbasic.sol\":1320:1691  function winningProposal() public constant returns (uint8 _winningProposal) {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"balletbasic.sol\":1320:1691  function winningProposal() public constant returns (uint8 _winningProposal) {\r... */\n      pop\n      tag_9\n      jump(tag_10)\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"balletbasic.sol\":1020:1312  function vote(uint8 toProposal) public {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"balletbasic.sol\":1020:1312  function vote(uint8 toProposal) public {\r... */\n      pop\n      tag_12\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_13)\n    tag_12:\n      stop\n        /* \"balletbasic.sol\":757:957  function register(address toVoter) public {\r... */\n    tag_7:\n        /* \"balletbasic.sol\":828:839  chairperson */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"balletbasic.sol\":814:839  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"balletbasic.sol\":814:824  msg.sender */\n      caller\n        /* \"balletbasic.sol\":814:839  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"balletbasic.sol\":814:864  msg.sender != chairperson || voters[toVoter].voted */\n      dup1\n      tag_15\n      jumpi\n      pop\n        /* \"balletbasic.sol\":843:849  voters */\n      0x1\n        /* \"balletbasic.sol\":843:858  voters[toVoter] */\n      0x0\n        /* \"balletbasic.sol\":850:857  toVoter */\n      dup3\n        /* \"balletbasic.sol\":843:858  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"balletbasic.sol\":843:864  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"balletbasic.sol\":814:864  msg.sender != chairperson || voters[toVoter].voted */\n    tag_15:\n        /* \"balletbasic.sol\":810:873  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n      iszero\n      tag_16\n      jumpi\n        /* \"balletbasic.sol\":866:873  return; */\n      jump(tag_14)\n        /* \"balletbasic.sol\":810:873  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n    tag_16:\n        /* \"balletbasic.sol\":908:909  1 */\n      0x1\n        /* \"balletbasic.sol\":883:889  voters */\n      dup1\n        /* \"balletbasic.sol\":883:898  voters[toVoter] */\n      0x0\n        /* \"balletbasic.sol\":890:897  toVoter */\n      dup4\n        /* \"balletbasic.sol\":883:898  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"balletbasic.sol\":883:905  voters[toVoter].weight */\n      0x0\n      add\n        /* \"balletbasic.sol\":883:909  voters[toVoter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"balletbasic.sol\":944:949  false */\n      0x0\n        /* \"balletbasic.sol\":920:926  voters */\n      0x1\n        /* \"balletbasic.sol\":920:935  voters[toVoter] */\n      0x0\n        /* \"balletbasic.sol\":927:934  toVoter */\n      dup4\n        /* \"balletbasic.sol\":920:935  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"balletbasic.sol\":920:941  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n        /* \"balletbasic.sol\":920:949  voters[toVoter].voted = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"balletbasic.sol\":757:957  function register(address toVoter) public {\r... */\n    tag_14:\n      pop\n      jump\t// out\n        /* \"balletbasic.sol\":1320:1691  function winningProposal() public constant returns (uint8 _winningProposal) {\r... */\n    tag_10:\n        /* \"balletbasic.sol\":1372:1394  uint8 _winningProposal */\n      0x0\n        /* \"balletbasic.sol\":1407:1431  uint256 winningVoteCount */\n      dup1\n        /* \"balletbasic.sol\":1451:1461  uint8 prop */\n      0x0\n        /* \"balletbasic.sol\":1434:1435  0 */\n      dup1\n        /* \"balletbasic.sol\":1407:1435  uint256 winningVoteCount = 0 */\n      swap2\n      pop\n        /* \"balletbasic.sol\":1464:1465  0 */\n      0x0\n        /* \"balletbasic.sol\":1451:1465  uint8 prop = 0 */\n      swap1\n      pop\n        /* \"balletbasic.sol\":1446:1684  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n    tag_18:\n        /* \"balletbasic.sol\":1474:1483  proposals */\n      0x2\n        /* \"balletbasic.sol\":1474:1490  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"balletbasic.sol\":1467:1471  prop */\n      dup2\n        /* \"balletbasic.sol\":1467:1490  prop < proposals.length */\n      0xff\n      and\n      lt\n        /* \"balletbasic.sol\":1446:1684  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n      iszero\n      tag_19\n      jumpi\n        /* \"balletbasic.sol\":1545:1561  winningVoteCount */\n      dup2\n        /* \"balletbasic.sol\":1517:1526  proposals */\n      0x2\n        /* \"balletbasic.sol\":1527:1531  prop */\n      dup3\n        /* \"balletbasic.sol\":1517:1532  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"balletbasic.sol\":1517:1542  proposals[prop].voteCount */\n      0x0\n      add\n      sload\n        /* \"balletbasic.sol\":1517:1561  proposals[prop].voteCount > winningVoteCount */\n      gt\n        /* \"balletbasic.sol\":1513:1684  if (proposals[prop].voteCount > winningVoteCount) {\r... */\n      iszero\n      tag_23\n      jumpi\n        /* \"balletbasic.sol\":1601:1610  proposals */\n      0x2\n        /* \"balletbasic.sol\":1611:1615  prop */\n      dup2\n        /* \"balletbasic.sol\":1601:1616  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_24\n      jumpi\n      invalid\n    tag_24:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"balletbasic.sol\":1601:1626  proposals[prop].voteCount */\n      0x0\n      add\n      sload\n        /* \"balletbasic.sol\":1582:1626  winningVoteCount = proposals[prop].voteCount */\n      swap2\n      pop\n        /* \"balletbasic.sol\":1664:1668  prop */\n      dup1\n        /* \"balletbasic.sol\":1645:1668  _winningProposal = prop */\n      swap3\n      pop\n        /* \"balletbasic.sol\":1513:1684  if (proposals[prop].voteCount > winningVoteCount) {\r... */\n    tag_23:\n        /* \"balletbasic.sol\":1492:1498  prop++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"balletbasic.sol\":1446:1684  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n      jump(tag_18)\n    tag_19:\n        /* \"balletbasic.sol\":1320:1691  function winningProposal() public constant returns (uint8 _winningProposal) {\r... */\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"balletbasic.sol\":1020:1312  function vote(uint8 toProposal) public {\r... */\n    tag_13:\n        /* \"balletbasic.sol\":1070:1090  Voter storage sender */\n      0x0\n        /* \"balletbasic.sol\":1093:1099  voters */\n      0x1\n        /* \"balletbasic.sol\":1093:1111  voters[msg.sender] */\n      0x0\n        /* \"balletbasic.sol\":1100:1110  msg.sender */\n      caller\n        /* \"balletbasic.sol\":1093:1111  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"balletbasic.sol\":1070:1111  Voter storage sender = voters[msg.sender] */\n      swap1\n      pop\n        /* \"balletbasic.sol\":1126:1132  sender */\n      dup1\n        /* \"balletbasic.sol\":1126:1138  sender.voted */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"balletbasic.sol\":1126:1172  sender.voted || toProposal >= proposals.length */\n      dup1\n      tag_27\n      jumpi\n      pop\n        /* \"balletbasic.sol\":1156:1165  proposals */\n      0x2\n        /* \"balletbasic.sol\":1156:1172  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"balletbasic.sol\":1142:1152  toProposal */\n      dup3\n        /* \"balletbasic.sol\":1142:1172  toProposal >= proposals.length */\n      0xff\n      and\n      lt\n      iszero\n        /* \"balletbasic.sol\":1126:1172  sender.voted || toProposal >= proposals.length */\n    tag_27:\n        /* \"balletbasic.sol\":1122:1181  if (sender.voted || toProposal >= proposals.length) return; */\n      iszero\n      tag_28\n      jumpi\n        /* \"balletbasic.sol\":1174:1181  return; */\n      jump(tag_26)\n        /* \"balletbasic.sol\":1122:1181  if (sender.voted || toProposal >= proposals.length) return; */\n    tag_28:\n        /* \"balletbasic.sol\":1206:1210  true */\n      0x1\n        /* \"balletbasic.sol\":1191:1197  sender */\n      dup2\n        /* \"balletbasic.sol\":1191:1203  sender.voted */\n      0x1\n      add\n      0x0\n        /* \"balletbasic.sol\":1191:1210  sender.voted = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"balletbasic.sol\":1235:1245  toProposal */\n      dup2\n        /* \"balletbasic.sol\":1221:1227  sender */\n      dup2\n        /* \"balletbasic.sol\":1221:1232  sender.vote */\n      0x1\n      add\n      0x1\n        /* \"balletbasic.sol\":1221:1245  sender.vote = toProposal */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"balletbasic.sol\":1291:1297  sender */\n      dup1\n        /* \"balletbasic.sol\":1291:1304  sender.weight */\n      0x0\n      add\n      sload\n        /* \"balletbasic.sol\":1256:1265  proposals */\n      0x2\n        /* \"balletbasic.sol\":1266:1276  toProposal */\n      dup4\n        /* \"balletbasic.sol\":1256:1277  proposals[toProposal] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_29\n      jumpi\n      invalid\n    tag_29:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"balletbasic.sol\":1256:1287  proposals[toProposal].voteCount */\n      0x0\n      add\n      0x0\n        /* \"balletbasic.sol\":1256:1304  proposals[toProposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"balletbasic.sol\":1020:1312  function vote(uint8 toProposal) public {\r... */\n    tag_26:\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820a57c126643bfd5fcc04d3e1bb3034b9deea551dae1fe8b68a48c74bc8ab2b4990029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405160208061053883398101806040528101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508060ff166002816100ed91906100f4565b5050610147565b81548183558181111561011b5781836000526020600020918201910161011a9190610120565b5b505050565b61014491905b808211156101405760008082016000905550600101610126565b5090565b90565b6103e2806101566000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e4861461005c578063609ff1bd1461009f578063b3f98adc146100d0575b600080fd5b34801561006857600080fd5b5061009d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610100565b005b3480156100ab57600080fd5b506100b4610258565b604051808260ff1660ff16815260200191505060405180910390f35b3480156100dc57600080fd5b506100fe600480360381019080803560ff1690602001909291905050506102d4565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806101a85750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b156101b257610255565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055505b50565b6000806000809150600090505b6002805490508160ff1610156102cf578160028260ff1681548110151561028857fe5b906000526020600020016000015411156102c25760028160ff168154811015156102ae57fe5b906000526020600020016000015491508092505b8080600101915050610265565b505090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff168061033c57506002805490508260ff1610155b15610346576103b2565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548160ff021916908360ff160217905550806000015460028360ff1681548110151561039757fe5b90600052602060002001600001600082825401925050819055505b50505600a165627a7a72305820a57c126643bfd5fcc04d3e1bb3034b9deea551dae1fe8b68a48c74bc8ab2b4990029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x538 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 PUSH2 0xED SWAP2 SWAP1 PUSH2 0xF4 JUMP JUMPDEST POP POP PUSH2 0x147 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x11B JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x120 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x144 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x126 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3E2 DUP1 PUSH2 0x156 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x100 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2D4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x1A8 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1B2 JUMPI PUSH2 0x255 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x2CF JUMPI DUP2 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x288 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2AE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x265 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x33C JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x346 JUMPI PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x397 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xa5 PUSH29 0x126643BFD5FCC04D3E1BB3034B9DEEA551DAE1FE8B68A48C74BC8AB2B4 SWAP10 STOP 0x29 ",
							"sourceMap": "58:1636:0:-;;;471:172;8:9:-1;5:2;;;30:1;27;20:12;5:2;471:172:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;540:10;526:11;;:24;;;;;;;;;;;;;;;;;;590:1;561:6;:19;568:11;;;;;;;;;;;561:19;;;;;;;;;;;;;;;:26;;:30;;;;621:13;602:32;;:9;:32;;;;;:::i;:::-;;471:172;58:1636;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e4861461005c578063609ff1bd1461009f578063b3f98adc146100d0575b600080fd5b34801561006857600080fd5b5061009d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610100565b005b3480156100ab57600080fd5b506100b4610258565b604051808260ff1660ff16815260200191505060405180910390f35b3480156100dc57600080fd5b506100fe600480360381019080803560ff1690602001909291905050506102d4565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806101a85750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b156101b257610255565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055505b50565b6000806000809150600090505b6002805490508160ff1610156102cf578160028260ff1681548110151561028857fe5b906000526020600020016000015411156102c25760028160ff168154811015156102ae57fe5b906000526020600020016000015491508092505b8080600101915050610265565b505090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff168061033c57506002805490508260ff1610155b15610346576103b2565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548160ff021916908360ff160217905550806000015460028360ff1681548110151561039757fe5b90600052602060002001600001600082825401925050819055505b50505600a165627a7a72305820a57c126643bfd5fcc04d3e1bb3034b9deea551dae1fe8b68a48c74bc8ab2b4990029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x100 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2D4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x1A8 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1B2 JUMPI PUSH2 0x255 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x2CF JUMPI DUP2 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x288 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2AE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x265 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x33C JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x346 JUMPI PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x397 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xa5 PUSH29 0x126643BFD5FCC04D3E1BB3034B9DEEA551DAE1FE8B68A48C74BC8AB2B4 SWAP10 STOP 0x29 ",
							"sourceMap": "58:1636:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;757:200;;8:9:-1;5:2;;;30:1;27;20:12;5:2;757:200:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1320:371;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1320:371:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:292;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1020:292:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;757:200;828:11;;;;;;;;;;;814:25;;:10;:25;;;;:50;;;;843:6;:15;850:7;843:15;;;;;;;;;;;;;;;:21;;;;;;;;;;;;814:50;810:63;;;866:7;;810:63;908:1;883:6;:15;890:7;883:15;;;;;;;;;;;;;;;:22;;:26;;;;944:5;920:6;:15;927:7;920:15;;;;;;;;;;;;;;;:21;;;:29;;;;;;;;;;;;;;;;;;757:200;;:::o;1320:371::-;1372:22;1407:24;1451:10;1434:1;1407:28;;1464:1;1451:14;;1446:238;1474:9;:16;;;;1467:4;:23;;;1446:238;;;1545:16;1517:9;1527:4;1517:15;;;;;;;;;;;;;;;;;;;:25;;;:44;1513:171;;;1601:9;1611:4;1601:15;;;;;;;;;;;;;;;;;;;:25;;;1582:44;;1664:4;1645:23;;1513:171;1492:6;;;;;;;1446:238;;;1320:371;;;:::o;1020:292::-;1070:20;1093:6;:18;1100:10;1093:18;;;;;;;;;;;;;;;1070:41;;1126:6;:12;;;;;;;;;;;;:46;;;;1156:9;:16;;;;1142:10;:30;;;;1126:46;1122:59;;;1174:7;;1122:59;1206:4;1191:6;:12;;;:19;;;;;;;;;;;;;;;;;;1235:10;1221:6;:11;;;:24;;;;;;;;;;;;;;;;;;1291:6;:13;;;1256:9;1266:10;1256:21;;;;;;;;;;;;;;;;;;;:31;;;:48;;;;;;;;;;;1020:292;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "198800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"register(address)": "41301",
								"vote(uint8)": "62184",
								"winningProposal()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 1694,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "MSTORE"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "POP"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "MLOAD"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "DUP1"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "PUSHSIZE"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "DUP4"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "CODECOPY"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "DUP2"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "ADD"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "DUP1"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "MSTORE"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "DUP2"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "ADD"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "SWAP1"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "DUP1"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "DUP1"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "MLOAD"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "SWAP1"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "ADD"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "SWAP1"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "SWAP3"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "SWAP2"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "SWAP1"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "POP"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "POP"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "POP"
								},
								{
									"begin": 540,
									"end": 550,
									"name": "CALLER"
								},
								{
									"begin": 526,
									"end": 537,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 526,
									"end": 537,
									"name": "DUP1"
								},
								{
									"begin": 526,
									"end": 550,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 526,
									"end": 550,
									"name": "EXP"
								},
								{
									"begin": 526,
									"end": 550,
									"name": "DUP2"
								},
								{
									"begin": 526,
									"end": 550,
									"name": "SLOAD"
								},
								{
									"begin": 526,
									"end": 550,
									"name": "DUP2"
								},
								{
									"begin": 526,
									"end": 550,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 526,
									"end": 550,
									"name": "MUL"
								},
								{
									"begin": 526,
									"end": 550,
									"name": "NOT"
								},
								{
									"begin": 526,
									"end": 550,
									"name": "AND"
								},
								{
									"begin": 526,
									"end": 550,
									"name": "SWAP1"
								},
								{
									"begin": 526,
									"end": 550,
									"name": "DUP4"
								},
								{
									"begin": 526,
									"end": 550,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 526,
									"end": 550,
									"name": "AND"
								},
								{
									"begin": 526,
									"end": 550,
									"name": "MUL"
								},
								{
									"begin": 526,
									"end": 550,
									"name": "OR"
								},
								{
									"begin": 526,
									"end": 550,
									"name": "SWAP1"
								},
								{
									"begin": 526,
									"end": 550,
									"name": "SSTORE"
								},
								{
									"begin": 526,
									"end": 550,
									"name": "POP"
								},
								{
									"begin": 590,
									"end": 591,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 561,
									"end": 567,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 561,
									"end": 580,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 568,
									"end": 579,
									"name": "DUP1"
								},
								{
									"begin": 568,
									"end": 579,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 568,
									"end": 579,
									"name": "SWAP1"
								},
								{
									"begin": 568,
									"end": 579,
									"name": "SLOAD"
								},
								{
									"begin": 568,
									"end": 579,
									"name": "SWAP1"
								},
								{
									"begin": 568,
									"end": 579,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 568,
									"end": 579,
									"name": "EXP"
								},
								{
									"begin": 568,
									"end": 579,
									"name": "SWAP1"
								},
								{
									"begin": 568,
									"end": 579,
									"name": "DIV"
								},
								{
									"begin": 568,
									"end": 579,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 568,
									"end": 579,
									"name": "AND"
								},
								{
									"begin": 561,
									"end": 580,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 561,
									"end": 580,
									"name": "AND"
								},
								{
									"begin": 561,
									"end": 580,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 561,
									"end": 580,
									"name": "AND"
								},
								{
									"begin": 561,
									"end": 580,
									"name": "DUP2"
								},
								{
									"begin": 561,
									"end": 580,
									"name": "MSTORE"
								},
								{
									"begin": 561,
									"end": 580,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 561,
									"end": 580,
									"name": "ADD"
								},
								{
									"begin": 561,
									"end": 580,
									"name": "SWAP1"
								},
								{
									"begin": 561,
									"end": 580,
									"name": "DUP2"
								},
								{
									"begin": 561,
									"end": 580,
									"name": "MSTORE"
								},
								{
									"begin": 561,
									"end": 580,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 561,
									"end": 580,
									"name": "ADD"
								},
								{
									"begin": 561,
									"end": 580,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 561,
									"end": 580,
									"name": "KECCAK256"
								},
								{
									"begin": 561,
									"end": 587,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 561,
									"end": 587,
									"name": "ADD"
								},
								{
									"begin": 561,
									"end": 591,
									"name": "DUP2"
								},
								{
									"begin": 561,
									"end": 591,
									"name": "SWAP1"
								},
								{
									"begin": 561,
									"end": 591,
									"name": "SSTORE"
								},
								{
									"begin": 561,
									"end": 591,
									"name": "POP"
								},
								{
									"begin": 621,
									"end": 634,
									"name": "DUP1"
								},
								{
									"begin": 602,
									"end": 634,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 602,
									"end": 634,
									"name": "AND"
								},
								{
									"begin": 602,
									"end": 611,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 602,
									"end": 634,
									"name": "DUP2"
								},
								{
									"begin": 602,
									"end": 634,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 602,
									"end": 634,
									"name": "SWAP2"
								},
								{
									"begin": 602,
									"end": 634,
									"name": "SWAP1"
								},
								{
									"begin": 602,
									"end": 634,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 602,
									"end": 634,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 602,
									"end": 634,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 602,
									"end": 634,
									"name": "JUMPDEST"
								},
								{
									"begin": 602,
									"end": 634,
									"name": "POP"
								},
								{
									"begin": 471,
									"end": 643,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "JUMP"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "SLOAD"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "DUP4"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "SSTORE"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "GT"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "ISZERO"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "JUMPI"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "DUP4"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "MSTORE"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "KECCAK256"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "SWAP2"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "DUP3"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "ADD"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "SWAP2"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "ADD"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "SWAP2"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "SWAP2"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "DUP1"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "DUP3"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "GT"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "ISZERO"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "JUMPI"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "DUP1"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "DUP3"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "ADD"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "SSTORE"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "ADD"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "JUMP"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "JUMP"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "DUP1"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "CODECOPY"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1694,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820a57c126643bfd5fcc04d3e1bb3034b9deea551dae1fe8b68a48c74bc8ab2b4990029",
									".code": [
										{
											"begin": 58,
											"end": 1694,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "MSTORE"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "LT"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "DIV"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "AND"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "PUSH",
											"value": "609FF1BD"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "PUSH",
											"value": "B3F98ADC"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1694,
											"name": "REVERT"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "JUMPDEST"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "POP"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "DUP1"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "SUB"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "DUP2"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "ADD"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "SWAP1"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "DUP1"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "DUP1"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "AND"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "SWAP1"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "ADD"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "SWAP1"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "SWAP3"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "SWAP2"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "SWAP1"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "POP"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "POP"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "POP"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "JUMP"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "JUMPDEST"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "STOP"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "JUMPDEST"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "POP"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "JUMP"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "JUMPDEST"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "MLOAD"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "DUP1"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "DUP3"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "AND"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "AND"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "DUP2"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "MSTORE"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "ADD"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "SWAP2"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "POP"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "POP"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "MLOAD"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "DUP1"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "SWAP2"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "SUB"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "SWAP1"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "RETURN"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "JUMPDEST"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "POP"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "DUP1"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "SUB"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "DUP2"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "ADD"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "DUP1"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "DUP1"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "AND"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "ADD"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "SWAP3"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "SWAP2"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "POP"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "POP"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "POP"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "JUMP"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "JUMPDEST"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "STOP"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "JUMPDEST"
										},
										{
											"begin": 828,
											"end": 839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 828,
											"end": 839,
											"name": "DUP1"
										},
										{
											"begin": 828,
											"end": 839,
											"name": "SWAP1"
										},
										{
											"begin": 828,
											"end": 839,
											"name": "SLOAD"
										},
										{
											"begin": 828,
											"end": 839,
											"name": "SWAP1"
										},
										{
											"begin": 828,
											"end": 839,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 828,
											"end": 839,
											"name": "EXP"
										},
										{
											"begin": 828,
											"end": 839,
											"name": "SWAP1"
										},
										{
											"begin": 828,
											"end": 839,
											"name": "DIV"
										},
										{
											"begin": 828,
											"end": 839,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 828,
											"end": 839,
											"name": "AND"
										},
										{
											"begin": 814,
											"end": 839,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 814,
											"end": 839,
											"name": "AND"
										},
										{
											"begin": 814,
											"end": 824,
											"name": "CALLER"
										},
										{
											"begin": 814,
											"end": 839,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 814,
											"end": 839,
											"name": "AND"
										},
										{
											"begin": 814,
											"end": 839,
											"name": "EQ"
										},
										{
											"begin": 814,
											"end": 839,
											"name": "ISZERO"
										},
										{
											"begin": 814,
											"end": 864,
											"name": "DUP1"
										},
										{
											"begin": 814,
											"end": 864,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 814,
											"end": 864,
											"name": "JUMPI"
										},
										{
											"begin": 814,
											"end": 864,
											"name": "POP"
										},
										{
											"begin": 843,
											"end": 849,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 843,
											"end": 858,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 850,
											"end": 857,
											"name": "DUP3"
										},
										{
											"begin": 843,
											"end": 858,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 843,
											"end": 858,
											"name": "AND"
										},
										{
											"begin": 843,
											"end": 858,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 843,
											"end": 858,
											"name": "AND"
										},
										{
											"begin": 843,
											"end": 858,
											"name": "DUP2"
										},
										{
											"begin": 843,
											"end": 858,
											"name": "MSTORE"
										},
										{
											"begin": 843,
											"end": 858,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 843,
											"end": 858,
											"name": "ADD"
										},
										{
											"begin": 843,
											"end": 858,
											"name": "SWAP1"
										},
										{
											"begin": 843,
											"end": 858,
											"name": "DUP2"
										},
										{
											"begin": 843,
											"end": 858,
											"name": "MSTORE"
										},
										{
											"begin": 843,
											"end": 858,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 843,
											"end": 858,
											"name": "ADD"
										},
										{
											"begin": 843,
											"end": 858,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 843,
											"end": 858,
											"name": "KECCAK256"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "ADD"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "SWAP1"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "SLOAD"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "SWAP1"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "EXP"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "SWAP1"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "DIV"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "AND"
										},
										{
											"begin": 814,
											"end": 864,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 814,
											"end": 864,
											"name": "JUMPDEST"
										},
										{
											"begin": 810,
											"end": 873,
											"name": "ISZERO"
										},
										{
											"begin": 810,
											"end": 873,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 810,
											"end": 873,
											"name": "JUMPI"
										},
										{
											"begin": 866,
											"end": 873,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 866,
											"end": 873,
											"name": "JUMP"
										},
										{
											"begin": 810,
											"end": 873,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 810,
											"end": 873,
											"name": "JUMPDEST"
										},
										{
											"begin": 908,
											"end": 909,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 883,
											"end": 889,
											"name": "DUP1"
										},
										{
											"begin": 883,
											"end": 898,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 890,
											"end": 897,
											"name": "DUP4"
										},
										{
											"begin": 883,
											"end": 898,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 883,
											"end": 898,
											"name": "AND"
										},
										{
											"begin": 883,
											"end": 898,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 883,
											"end": 898,
											"name": "AND"
										},
										{
											"begin": 883,
											"end": 898,
											"name": "DUP2"
										},
										{
											"begin": 883,
											"end": 898,
											"name": "MSTORE"
										},
										{
											"begin": 883,
											"end": 898,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 883,
											"end": 898,
											"name": "ADD"
										},
										{
											"begin": 883,
											"end": 898,
											"name": "SWAP1"
										},
										{
											"begin": 883,
											"end": 898,
											"name": "DUP2"
										},
										{
											"begin": 883,
											"end": 898,
											"name": "MSTORE"
										},
										{
											"begin": 883,
											"end": 898,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 883,
											"end": 898,
											"name": "ADD"
										},
										{
											"begin": 883,
											"end": 898,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 883,
											"end": 898,
											"name": "KECCAK256"
										},
										{
											"begin": 883,
											"end": 905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 883,
											"end": 905,
											"name": "ADD"
										},
										{
											"begin": 883,
											"end": 909,
											"name": "DUP2"
										},
										{
											"begin": 883,
											"end": 909,
											"name": "SWAP1"
										},
										{
											"begin": 883,
											"end": 909,
											"name": "SSTORE"
										},
										{
											"begin": 883,
											"end": 909,
											"name": "POP"
										},
										{
											"begin": 944,
											"end": 949,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 920,
											"end": 926,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 920,
											"end": 935,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 927,
											"end": 934,
											"name": "DUP4"
										},
										{
											"begin": 920,
											"end": 935,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 920,
											"end": 935,
											"name": "AND"
										},
										{
											"begin": 920,
											"end": 935,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 920,
											"end": 935,
											"name": "AND"
										},
										{
											"begin": 920,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 920,
											"end": 935,
											"name": "MSTORE"
										},
										{
											"begin": 920,
											"end": 935,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 920,
											"end": 935,
											"name": "ADD"
										},
										{
											"begin": 920,
											"end": 935,
											"name": "SWAP1"
										},
										{
											"begin": 920,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 920,
											"end": 935,
											"name": "MSTORE"
										},
										{
											"begin": 920,
											"end": 935,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 920,
											"end": 935,
											"name": "ADD"
										},
										{
											"begin": 920,
											"end": 935,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 920,
											"end": 935,
											"name": "KECCAK256"
										},
										{
											"begin": 920,
											"end": 941,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 920,
											"end": 941,
											"name": "ADD"
										},
										{
											"begin": 920,
											"end": 941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 920,
											"end": 949,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 920,
											"end": 949,
											"name": "EXP"
										},
										{
											"begin": 920,
											"end": 949,
											"name": "DUP2"
										},
										{
											"begin": 920,
											"end": 949,
											"name": "SLOAD"
										},
										{
											"begin": 920,
											"end": 949,
											"name": "DUP2"
										},
										{
											"begin": 920,
											"end": 949,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 920,
											"end": 949,
											"name": "MUL"
										},
										{
											"begin": 920,
											"end": 949,
											"name": "NOT"
										},
										{
											"begin": 920,
											"end": 949,
											"name": "AND"
										},
										{
											"begin": 920,
											"end": 949,
											"name": "SWAP1"
										},
										{
											"begin": 920,
											"end": 949,
											"name": "DUP4"
										},
										{
											"begin": 920,
											"end": 949,
											"name": "ISZERO"
										},
										{
											"begin": 920,
											"end": 949,
											"name": "ISZERO"
										},
										{
											"begin": 920,
											"end": 949,
											"name": "MUL"
										},
										{
											"begin": 920,
											"end": 949,
											"name": "OR"
										},
										{
											"begin": 920,
											"end": 949,
											"name": "SWAP1"
										},
										{
											"begin": 920,
											"end": 949,
											"name": "SSTORE"
										},
										{
											"begin": 920,
											"end": 949,
											"name": "POP"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "JUMPDEST"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "POP"
										},
										{
											"begin": 757,
											"end": 957,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "JUMPDEST"
										},
										{
											"begin": 1372,
											"end": 1394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1431,
											"name": "DUP1"
										},
										{
											"begin": 1451,
											"end": 1461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1435,
											"name": "DUP1"
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "SWAP2"
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "POP"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "SWAP1"
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "POP"
										},
										{
											"begin": 1446,
											"end": 1684,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1446,
											"end": 1684,
											"name": "JUMPDEST"
										},
										{
											"begin": 1474,
											"end": 1483,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1474,
											"end": 1490,
											"name": "DUP1"
										},
										{
											"begin": 1474,
											"end": 1490,
											"name": "SLOAD"
										},
										{
											"begin": 1474,
											"end": 1490,
											"name": "SWAP1"
										},
										{
											"begin": 1474,
											"end": 1490,
											"name": "POP"
										},
										{
											"begin": 1467,
											"end": 1471,
											"name": "DUP2"
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "AND"
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "LT"
										},
										{
											"begin": 1446,
											"end": 1684,
											"name": "ISZERO"
										},
										{
											"begin": 1446,
											"end": 1684,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1446,
											"end": 1684,
											"name": "JUMPI"
										},
										{
											"begin": 1545,
											"end": 1561,
											"name": "DUP2"
										},
										{
											"begin": 1517,
											"end": 1526,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1527,
											"end": 1531,
											"name": "DUP3"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "AND"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "DUP2"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "SLOAD"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "DUP2"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "LT"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "ISZERO"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "ISZERO"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "JUMPI"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "INVALID"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "JUMPDEST"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "SWAP1"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "MSTORE"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "KECCAK256"
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "ADD"
										},
										{
											"begin": 1517,
											"end": 1542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1542,
											"name": "ADD"
										},
										{
											"begin": 1517,
											"end": 1542,
											"name": "SLOAD"
										},
										{
											"begin": 1517,
											"end": 1561,
											"name": "GT"
										},
										{
											"begin": 1513,
											"end": 1684,
											"name": "ISZERO"
										},
										{
											"begin": 1513,
											"end": 1684,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1513,
											"end": 1684,
											"name": "JUMPI"
										},
										{
											"begin": 1601,
											"end": 1610,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1611,
											"end": 1615,
											"name": "DUP2"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "AND"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "DUP2"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "SLOAD"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "DUP2"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "LT"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "ISZERO"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "ISZERO"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "JUMPI"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "INVALID"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "JUMPDEST"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "SWAP1"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "MSTORE"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "KECCAK256"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "ADD"
										},
										{
											"begin": 1601,
											"end": 1626,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1626,
											"name": "ADD"
										},
										{
											"begin": 1601,
											"end": 1626,
											"name": "SLOAD"
										},
										{
											"begin": 1582,
											"end": 1626,
											"name": "SWAP2"
										},
										{
											"begin": 1582,
											"end": 1626,
											"name": "POP"
										},
										{
											"begin": 1664,
											"end": 1668,
											"name": "DUP1"
										},
										{
											"begin": 1645,
											"end": 1668,
											"name": "SWAP3"
										},
										{
											"begin": 1645,
											"end": 1668,
											"name": "POP"
										},
										{
											"begin": 1513,
											"end": 1684,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1513,
											"end": 1684,
											"name": "JUMPDEST"
										},
										{
											"begin": 1492,
											"end": 1498,
											"name": "DUP1"
										},
										{
											"begin": 1492,
											"end": 1498,
											"name": "DUP1"
										},
										{
											"begin": 1492,
											"end": 1498,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1492,
											"end": 1498,
											"name": "ADD"
										},
										{
											"begin": 1492,
											"end": 1498,
											"name": "SWAP2"
										},
										{
											"begin": 1492,
											"end": 1498,
											"name": "POP"
										},
										{
											"begin": 1492,
											"end": 1498,
											"name": "POP"
										},
										{
											"begin": 1446,
											"end": 1684,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1446,
											"end": 1684,
											"name": "JUMP"
										},
										{
											"begin": 1446,
											"end": 1684,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1446,
											"end": 1684,
											"name": "JUMPDEST"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "POP"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "POP"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "SWAP1"
										},
										{
											"begin": 1320,
											"end": 1691,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "JUMPDEST"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1099,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1110,
											"name": "CALLER"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "AND"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "AND"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "DUP2"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "MSTORE"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "ADD"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "SWAP1"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "DUP2"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "MSTORE"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "ADD"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "KECCAK256"
										},
										{
											"begin": 1070,
											"end": 1111,
											"name": "SWAP1"
										},
										{
											"begin": 1070,
											"end": 1111,
											"name": "POP"
										},
										{
											"begin": 1126,
											"end": 1132,
											"name": "DUP1"
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "ADD"
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "SWAP1"
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "SLOAD"
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "SWAP1"
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "EXP"
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "SWAP1"
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "DIV"
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "AND"
										},
										{
											"begin": 1126,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1126,
											"end": 1172,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1126,
											"end": 1172,
											"name": "JUMPI"
										},
										{
											"begin": 1126,
											"end": 1172,
											"name": "POP"
										},
										{
											"begin": 1156,
											"end": 1165,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "SLOAD"
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "SWAP1"
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "POP"
										},
										{
											"begin": 1142,
											"end": 1152,
											"name": "DUP3"
										},
										{
											"begin": 1142,
											"end": 1172,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1142,
											"end": 1172,
											"name": "AND"
										},
										{
											"begin": 1142,
											"end": 1172,
											"name": "LT"
										},
										{
											"begin": 1142,
											"end": 1172,
											"name": "ISZERO"
										},
										{
											"begin": 1126,
											"end": 1172,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1126,
											"end": 1172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "ISZERO"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "JUMPI"
										},
										{
											"begin": 1174,
											"end": 1181,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1174,
											"end": 1181,
											"name": "JUMP"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "JUMPDEST"
										},
										{
											"begin": 1206,
											"end": 1210,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1191,
											"end": 1197,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1203,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1191,
											"end": 1203,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "EXP"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "SLOAD"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "MUL"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "NOT"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "AND"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "SWAP1"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "DUP4"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "ISZERO"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "ISZERO"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "MUL"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "OR"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "SWAP1"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "SSTORE"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "POP"
										},
										{
											"begin": 1235,
											"end": 1245,
											"name": "DUP2"
										},
										{
											"begin": 1221,
											"end": 1227,
											"name": "DUP2"
										},
										{
											"begin": 1221,
											"end": 1232,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1221,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1221,
											"end": 1232,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1221,
											"end": 1245,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1221,
											"end": 1245,
											"name": "EXP"
										},
										{
											"begin": 1221,
											"end": 1245,
											"name": "DUP2"
										},
										{
											"begin": 1221,
											"end": 1245,
											"name": "SLOAD"
										},
										{
											"begin": 1221,
											"end": 1245,
											"name": "DUP2"
										},
										{
											"begin": 1221,
											"end": 1245,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1221,
											"end": 1245,
											"name": "MUL"
										},
										{
											"begin": 1221,
											"end": 1245,
											"name": "NOT"
										},
										{
											"begin": 1221,
											"end": 1245,
											"name": "AND"
										},
										{
											"begin": 1221,
											"end": 1245,
											"name": "SWAP1"
										},
										{
											"begin": 1221,
											"end": 1245,
											"name": "DUP4"
										},
										{
											"begin": 1221,
											"end": 1245,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1221,
											"end": 1245,
											"name": "AND"
										},
										{
											"begin": 1221,
											"end": 1245,
											"name": "MUL"
										},
										{
											"begin": 1221,
											"end": 1245,
											"name": "OR"
										},
										{
											"begin": 1221,
											"end": 1245,
											"name": "SWAP1"
										},
										{
											"begin": 1221,
											"end": 1245,
											"name": "SSTORE"
										},
										{
											"begin": 1221,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 1291,
											"end": 1297,
											"name": "DUP1"
										},
										{
											"begin": 1291,
											"end": 1304,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1304,
											"name": "ADD"
										},
										{
											"begin": 1291,
											"end": 1304,
											"name": "SLOAD"
										},
										{
											"begin": 1256,
											"end": 1265,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1266,
											"end": 1276,
											"name": "DUP4"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "AND"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP2"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "SLOAD"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP2"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "LT"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "ISZERO"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "ISZERO"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "INVALID"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPDEST"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "SWAP1"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "MSTORE"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "KECCAK256"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "ADD"
										},
										{
											"begin": 1256,
											"end": 1287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1287,
											"name": "ADD"
										},
										{
											"begin": 1256,
											"end": 1287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1304,
											"name": "DUP3"
										},
										{
											"begin": 1256,
											"end": 1304,
											"name": "DUP3"
										},
										{
											"begin": 1256,
											"end": 1304,
											"name": "SLOAD"
										},
										{
											"begin": 1256,
											"end": 1304,
											"name": "ADD"
										},
										{
											"begin": 1256,
											"end": 1304,
											"name": "SWAP3"
										},
										{
											"begin": 1256,
											"end": 1304,
											"name": "POP"
										},
										{
											"begin": 1256,
											"end": 1304,
											"name": "POP"
										},
										{
											"begin": 1256,
											"end": 1304,
											"name": "DUP2"
										},
										{
											"begin": 1256,
											"end": 1304,
											"name": "SWAP1"
										},
										{
											"begin": 1256,
											"end": 1304,
											"name": "SSTORE"
										},
										{
											"begin": 1256,
											"end": 1304,
											"name": "POP"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "JUMPDEST"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "POP"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "POP"
										},
										{
											"begin": 1020,
											"end": 1312,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"register(address)": "4420e486",
							"vote(uint8)": "b3f98adc",
							"winningProposal()": "609ff1bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"toVoter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"name\":\"_winningProposal\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toProposal\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_numProposals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"register(address)\":{\"notice\":\"May only be called by $(chairperson).\"},\"vote(uint8)\":{\"notice\":\"Give a single vote to proposal $(toProposal).\"}}}},\"settings\":{\"compilationTarget\":{\"balletbasic.sol\":\"Ballot\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"balletbasic.sol\":{\"keccak256\":\"0xd84972e064bf929dc410abe2d5f0dfbcf16abcfee112f8d6be6ac40b554331b0\",\"urls\":[\"bzzr://fee101f385a6be760d24332dc75b2520ff3d27a22e214795ecbac15c24e6c11b\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"register(address)": {
								"notice": "May only be called by $(chairperson)."
							},
							"vote(uint8)": {
								"notice": "Give a single vote to proposal $(toProposal)."
							}
						}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "balletbasic.sol:21:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Ballot(uint8 _numProposals) public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 643,
					"file": "balletbasic.sol",
					"start": 471
				},
				"type": "Warning"
			}
		],
		"sources": {
			"balletbasic.sol": {
				"ast": {
					"absolutePath": "balletbasic.sol",
					"exportedSymbols": {
						"Ballot": [
							159
						]
					},
					"id": 160,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 159,
							"linearizedBaseContracts": [
								159
							],
							"name": "Ballot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "107:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "107:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "129:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "129:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "150:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 6,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "150:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 159,
									"src": "83:114:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "230:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "230:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 159,
									"src": "203:88:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"scope": 159,
									"src": "299:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "299:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 159,
									"src": "325:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 16,
										"keyType": {
											"id": 14,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "333:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "325:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 15,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "344:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 159,
									"src": "364:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 18,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 11,
											"src": "364:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$11_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 19,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "364:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "515:128:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 25,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "526:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 26,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "540:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "540:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "526:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "526:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 30,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "561:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 32,
															"indexExpression": {
																"argumentTypes": null,
																"id": 31,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "568:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "561:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "561:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "590:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "561:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "561:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 37,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "602:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "602:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 40,
														"name": "_numProposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "621:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "602:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "602:32:0"
											}
										]
									},
									"documentation": "Create a new ballot with $(_numProposals) different proposals.",
									"id": 44,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Ballot",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"name": "_numProposals",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "487:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 21,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "487:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "486:21:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "515:0:0"
									},
									"scope": 159,
									"src": "471:172:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "799:158:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 49,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "814:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "814:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 51,
															"name": "chairperson",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "828:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "814:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 53,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "843:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 55,
															"indexExpression": {
																"argumentTypes": null,
																"id": 54,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "850:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "843:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "843:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "814:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 59,
												"nodeType": "IfStatement",
												"src": "810:63:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 48,
													"id": 58,
													"nodeType": "Return",
													"src": "866:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 60,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "883:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 62,
															"indexExpression": {
																"argumentTypes": null,
																"id": 61,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "890:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "883:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "883:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "908:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "883:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "883:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 67,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "920:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 69,
															"indexExpression": {
																"argumentTypes": null,
																"id": 68,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "927:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "920:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "920:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "944:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "920:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "920:29:0"
											}
										]
									},
									"documentation": "May only be called by $(chairperson).",
									"id": 75,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"name": "toVoter",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "775:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "774:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:0:0"
									},
									"scope": 159,
									"src": "757:200:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "1059:253:0",
										"statements": [
											{
												"assignments": [
													81
												],
												"declarations": [
													{
														"constant": false,
														"id": 81,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"scope": 117,
														"src": "1070:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 80,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 8,
															"src": "1070:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 86,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 82,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1093:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 85,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 83,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "1100:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1100:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1093:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$8_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1070:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 87,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1126:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 88,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1126:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 89,
															"name": "toProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1142:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 90,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1156:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 91,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1156:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1142:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1126:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 95,
												"nodeType": "IfStatement",
												"src": "1122:59:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 79,
													"id": 94,
													"nodeType": "Return",
													"src": "1174:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 96,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1191:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1191:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1206:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1191:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1191:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 102,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1221:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1221:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 105,
														"name": "toProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "1235:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1221:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1221:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 108,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1256:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 110,
															"indexExpression": {
																"argumentTypes": null,
																"id": 109,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1266:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1256:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$11_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1256:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 112,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1291:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1291:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1256:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1256:48:0"
											}
										]
									},
									"documentation": "Give a single vote to proposal $(toProposal).",
									"id": 117,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"name": "toProposal",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "1034:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 76,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1034:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1033:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1059:0:0"
									},
									"scope": 159,
									"src": "1020:292:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "1396:295:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "winningVoteCount",
														"nodeType": "VariableDeclaration",
														"scope": 158,
														"src": "1407:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1407:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 125,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1434:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1407:28:0"
											},
											{
												"body": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 137,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1517:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																		"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																	}
																},
																"id": 139,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 138,
																	"name": "prop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "1527:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1517:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$11_storage",
																	"typeString": "struct Ballot.Proposal storage ref"
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voteCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "1517:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 141,
															"name": "winningVoteCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1545:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1517:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 155,
													"nodeType": "IfStatement",
													"src": "1513:171:0",
													"trueBody": {
														"id": 154,
														"nodeType": "Block",
														"src": "1563:121:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 143,
																		"name": "winningVoteCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 123,
																		"src": "1582:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 144,
																				"name": "proposals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 20,
																				"src": "1601:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																					"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																				}
																			},
																			"id": 146,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 145,
																				"name": "prop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 127,
																				"src": "1611:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1601:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$11_storage",
																				"typeString": "struct Ballot.Proposal storage ref"
																			}
																		},
																		"id": 147,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voteCount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 10,
																		"src": "1601:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1582:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 149,
																"nodeType": "ExpressionStatement",
																"src": "1582:44:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 150,
																		"name": "_winningProposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 120,
																		"src": "1645:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 151,
																		"name": "prop",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 127,
																		"src": "1664:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "1645:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 153,
																"nodeType": "ExpressionStatement",
																"src": "1645:23:0"
															}
														]
													}
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 130,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "1467:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 131,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1474:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1474:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1467:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 156,
												"initializationExpression": {
													"assignments": [
														127
													],
													"declarations": [
														{
															"constant": false,
															"id": 127,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"scope": 158,
															"src": "1451:10:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 126,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "1451:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 129,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1464:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1451:14:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1492:6:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 134,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "1492:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 136,
													"nodeType": "ExpressionStatement",
													"src": "1492:6:0"
												},
												"nodeType": "ForStatement",
												"src": "1446:238:0"
											}
										]
									},
									"documentation": null,
									"id": 158,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "winningProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1344:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "_winningProposal",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1372:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 119,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1372:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1371:24:0"
									},
									"scope": 159,
									"src": "1320:371:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 160,
							"src": "58:1636:0"
						}
					],
					"src": "33:1666:0"
				},
				"id": 0
			}
		}
	}
}