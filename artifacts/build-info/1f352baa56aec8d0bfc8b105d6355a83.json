{
	"id": "1f352baa56aec8d0bfc8b105d6355a83",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"bidder.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.4.0;\r\ncontract Ballot {\r\n\r\n    struct Voter {\r\n        uint weight;\r\n        bool voted;\r\n        uint8 vote;\r\n    }\r\n    struct Proposal {\r\n        uint voteCount;\r\n    }\r\n    enum Stage {Init,Reg, Vote, Done}\r\n    Stage public stage = Stage.Init;\r\n    \r\n    address chairperson;\r\n    mapping(address => Voter) voters;\r\n    Proposal[] proposals;\r\n\r\n    \r\n    uint startTime;   \r\n\r\n    /// Create a new ballot with $(_numProposals) different proposals.\r\n    function Ballot(uint8 _numProposals) public  {\r\n        chairperson = msg.sender;\r\n        voters[chairperson].weight = 2; // weight is 2 for testing purposes\r\n        proposals.length = _numProposals;\r\n        stage = Stage.Reg;\r\n        startTime = now;\r\n    }\r\n\r\n    /// Give $(toVoter) the right to vote on this ballot.\r\n    /// May only be called by $(chairperson).\r\n    function register(address toVoter) public {\r\n        if (stage != Stage.Reg) {return;}\r\n        if (msg.sender != chairperson || voters[toVoter].voted) return;\r\n        voters[toVoter].weight = 1;\r\n        voters[toVoter].voted = false;\r\n        if (now > (startTime+ 10 seconds)) {stage = Stage.Vote; startTime = now;}        \r\n    }\r\n\r\n    /// Give a single vote to proposal $(toProposal).\r\n    function vote(uint8 toProposal) public  {\r\n        if (stage != Stage.Vote) {return;}\r\n        Voter storage sender = voters[msg.sender];\r\n        if (sender.voted || toProposal >= proposals.length) return;\r\n        sender.voted = true;\r\n        sender.vote = toProposal;   \r\n        proposals[toProposal].voteCount += sender.weight;\r\n        if (now > (startTime+ 10 seconds)) {stage = Stage.Done;}        \r\n        \r\n    }\r\n\r\n    function winningProposal() public constant returns (uint8 _winningProposal) {\r\n       if(stage != Stage.Done) {return;}\r\n        uint256 winningVoteCount = 0;\r\n        for (uint8 prop = 0; prop < proposals.length; prop++)\r\n            if (proposals[prop].voteCount > winningVoteCount) {\r\n                winningVoteCount = proposals[prop].voteCount;\r\n                _winningProposal = prop;\r\n            }\r\n       \r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"bidder.sol": {
				"Ballot": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "toVoter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "winningProposal",
							"outputs": [
								{
									"name": "_winningProposal",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "toProposal",
									"type": "uint8"
								}
							],
							"name": "vote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "stage",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_numProposals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"bidder.sol\":58:2140  contract Ballot {\r... */\n  mstore(0x40, 0x80)\n    /* \"bidder.sol\":289:299  Stage.Init */\n  0x0\n    /* \"bidder.sol\":268:299  Stage public stage = Stage.Init */\n  dup1\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x3\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"bidder.sol\":510:772  function Ballot(uint8 _numProposals) public  {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_2:\n    /* \"bidder.sol\":510:772  function Ballot(uint8 _numProposals) public  {\r... */\n  pop\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"bidder.sol\":580:590  msg.sender */\n  caller\n    /* \"bidder.sol\":566:577  chairperson */\n  0x0\n  0x1\n    /* \"bidder.sol\":566:590  chairperson = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"bidder.sol\":630:631  2 */\n  0x2\n    /* \"bidder.sol\":601:607  voters */\n  0x1\n    /* \"bidder.sol\":601:620  voters[chairperson] */\n  0x0\n    /* \"bidder.sol\":608:619  chairperson */\n  dup1\n  0x1\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"bidder.sol\":601:620  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"bidder.sol\":601:627  voters[chairperson].weight */\n  0x0\n  add\n    /* \"bidder.sol\":601:631  voters[chairperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"bidder.sol\":697:710  _numProposals */\n  dup1\n    /* \"bidder.sol\":678:710  proposals.length = _numProposals */\n  0xff\n  and\n    /* \"bidder.sol\":678:687  proposals */\n  0x2\n    /* \"bidder.sol\":678:710  proposals.length = _numProposals */\n  dup2\n  tag_5\n  swap2\n  swap1\n  jump\t// in(tag_6)\ntag_5:\n  pop\n    /* \"bidder.sol\":729:738  Stage.Reg */\n  0x1\n    /* \"bidder.sol\":721:726  stage */\n  0x0\n  dup1\n    /* \"bidder.sol\":721:738  stage = Stage.Reg */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x3\n  dup2\n  gt\n  iszero\n  tag_7\n  jumpi\n  invalid\ntag_7:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"bidder.sol\":761:764  now */\n  timestamp\n    /* \"bidder.sol\":749:758  startTime */\n  0x3\n    /* \"bidder.sol\":749:764  startTime = now */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"bidder.sol\":510:772  function Ballot(uint8 _numProposals) public  {\r... */\n  pop\n    /* \"bidder.sol\":58:2140  contract Ballot {\r... */\n  jump(tag_8)\ntag_6:\n  dup2\n  sload\n  dup2\n  dup4\n  sstore\n  dup2\n  dup2\n  gt\n  iszero\n  tag_9\n  jumpi\n  dup2\n  dup4\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap2\n  dup3\n  add\n  swap2\n  add\n  tag_10\n  swap2\n  swap1\n  jump\t// in(tag_11)\ntag_10:\ntag_9:\n  pop\n  pop\n  pop\n  jump\t// out\ntag_11:\n  tag_12\n  swap2\n  swap1\ntag_13:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_14\n  jumpi\n  0x0\n  dup1\n  dup3\n  add\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_13)\ntag_14:\n  pop\n  swap1\n  jump\ntag_12:\n  swap1\n  jump\t// out\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"bidder.sol\":58:2140  contract Ballot {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x4420e486\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x609ff1bd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb3f98adc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc040e6b8\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"bidder.sol\":886:1220  function register(address toVoter) public {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_6:\n        /* \"bidder.sol\":886:1220  function register(address toVoter) public {\r... */\n      pop\n      tag_7\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_8)\n    tag_7:\n      stop\n        /* \"bidder.sol\":1715:2137  function winningProposal() public constant returns (uint8 _winningProposal) {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"bidder.sol\":1715:2137  function winningProposal() public constant returns (uint8 _winningProposal) {\r... */\n      pop\n      tag_10\n      jump(tag_11)\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"bidder.sol\":1283:1707  function vote(uint8 toProposal) public  {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"bidder.sol\":1283:1707  function vote(uint8 toProposal) public  {\r... */\n      pop\n      tag_13\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_14)\n    tag_13:\n      stop\n        /* \"bidder.sol\":268:299  Stage public stage = Stage.Init */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"bidder.sol\":268:299  Stage public stage = Stage.Init */\n      pop\n      tag_16\n      jump(tag_17)\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      0x3\n      dup2\n      gt\n      iszero\n      tag_18\n      jumpi\n      invalid\n    tag_18:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"bidder.sol\":886:1220  function register(address toVoter) public {\r... */\n    tag_8:\n        /* \"bidder.sol\":952:961  Stage.Reg */\n      0x1\n        /* \"bidder.sol\":943:961  stage != Stage.Reg */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_20\n      jumpi\n      invalid\n    tag_20:\n        /* \"bidder.sol\":943:948  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"bidder.sol\":943:961  stage != Stage.Reg */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      eq\n      iszero\n        /* \"bidder.sol\":939:972  if (stage != Stage.Reg) {return;} */\n      iszero\n      tag_22\n      jumpi\n        /* \"bidder.sol\":964:971  return; */\n      jump(tag_19)\n        /* \"bidder.sol\":939:972  if (stage != Stage.Reg) {return;} */\n    tag_22:\n        /* \"bidder.sol\":1000:1011  chairperson */\n      0x0\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"bidder.sol\":986:1011  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"bidder.sol\":986:996  msg.sender */\n      caller\n        /* \"bidder.sol\":986:1011  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"bidder.sol\":986:1036  msg.sender != chairperson || voters[toVoter].voted */\n      dup1\n      tag_23\n      jumpi\n      pop\n        /* \"bidder.sol\":1015:1021  voters */\n      0x1\n        /* \"bidder.sol\":1015:1030  voters[toVoter] */\n      0x0\n        /* \"bidder.sol\":1022:1029  toVoter */\n      dup3\n        /* \"bidder.sol\":1015:1030  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"bidder.sol\":1015:1036  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"bidder.sol\":986:1036  msg.sender != chairperson || voters[toVoter].voted */\n    tag_23:\n        /* \"bidder.sol\":982:1045  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n      iszero\n      tag_24\n      jumpi\n        /* \"bidder.sol\":1038:1045  return; */\n      jump(tag_19)\n        /* \"bidder.sol\":982:1045  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n    tag_24:\n        /* \"bidder.sol\":1080:1081  1 */\n      0x1\n        /* \"bidder.sol\":1055:1061  voters */\n      dup1\n        /* \"bidder.sol\":1055:1070  voters[toVoter] */\n      0x0\n        /* \"bidder.sol\":1062:1069  toVoter */\n      dup4\n        /* \"bidder.sol\":1055:1070  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"bidder.sol\":1055:1077  voters[toVoter].weight */\n      0x0\n      add\n        /* \"bidder.sol\":1055:1081  voters[toVoter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"bidder.sol\":1116:1121  false */\n      0x0\n        /* \"bidder.sol\":1092:1098  voters */\n      0x1\n        /* \"bidder.sol\":1092:1107  voters[toVoter] */\n      0x0\n        /* \"bidder.sol\":1099:1106  toVoter */\n      dup4\n        /* \"bidder.sol\":1092:1107  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"bidder.sol\":1092:1113  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n        /* \"bidder.sol\":1092:1121  voters[toVoter].voted = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"bidder.sol\":1154:1164  10 seconds */\n      0xa\n        /* \"bidder.sol\":1143:1152  startTime */\n      sload(0x3)\n        /* \"bidder.sol\":1143:1164  startTime+ 10 seconds */\n      add\n        /* \"bidder.sol\":1136:1139  now */\n      timestamp\n        /* \"bidder.sol\":1136:1165  now > (startTime+ 10 seconds) */\n      gt\n        /* \"bidder.sol\":1132:1205  if (now > (startTime+ 10 seconds)) {stage = Stage.Vote; startTime = now;} */\n      iszero\n      tag_25\n      jumpi\n        /* \"bidder.sol\":1176:1186  Stage.Vote */\n      0x2\n        /* \"bidder.sol\":1168:1173  stage */\n      0x0\n      dup1\n        /* \"bidder.sol\":1168:1186  stage = Stage.Vote */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x3\n      dup2\n      gt\n      iszero\n      tag_26\n      jumpi\n      invalid\n    tag_26:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"bidder.sol\":1200:1203  now */\n      timestamp\n        /* \"bidder.sol\":1188:1197  startTime */\n      0x3\n        /* \"bidder.sol\":1188:1203  startTime = now */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"bidder.sol\":1132:1205  if (now > (startTime+ 10 seconds)) {stage = Stage.Vote; startTime = now;} */\n    tag_25:\n        /* \"bidder.sol\":886:1220  function register(address toVoter) public {\r... */\n    tag_19:\n      pop\n      jump\t// out\n        /* \"bidder.sol\":1715:2137  function winningProposal() public constant returns (uint8 _winningProposal) {\r... */\n    tag_11:\n        /* \"bidder.sol\":1767:1789  uint8 _winningProposal */\n      0x0\n        /* \"bidder.sol\":1844:1868  uint256 winningVoteCount */\n      dup1\n        /* \"bidder.sol\":1888:1898  uint8 prop */\n      0x0\n        /* \"bidder.sol\":1813:1823  Stage.Done */\n      0x3\n        /* \"bidder.sol\":1804:1823  stage != Stage.Done */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_28\n      jumpi\n      invalid\n    tag_28:\n        /* \"bidder.sol\":1804:1809  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"bidder.sol\":1804:1823  stage != Stage.Done */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_29\n      jumpi\n      invalid\n    tag_29:\n      eq\n      iszero\n        /* \"bidder.sol\":1801:1834  if(stage != Stage.Done) {return;} */\n      iszero\n      tag_30\n      jumpi\n        /* \"bidder.sol\":1826:1833  return; */\n      jump(tag_27)\n        /* \"bidder.sol\":1801:1834  if(stage != Stage.Done) {return;} */\n    tag_30:\n        /* \"bidder.sol\":1871:1872  0 */\n      0x0\n        /* \"bidder.sol\":1844:1872  uint256 winningVoteCount = 0 */\n      swap2\n      pop\n        /* \"bidder.sol\":1901:1902  0 */\n      0x0\n        /* \"bidder.sol\":1888:1902  uint8 prop = 0 */\n      swap1\n      pop\n        /* \"bidder.sol\":1883:2121  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n    tag_31:\n        /* \"bidder.sol\":1911:1920  proposals */\n      0x2\n        /* \"bidder.sol\":1911:1927  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"bidder.sol\":1904:1908  prop */\n      dup2\n        /* \"bidder.sol\":1904:1927  prop < proposals.length */\n      0xff\n      and\n      lt\n        /* \"bidder.sol\":1883:2121  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n      iszero\n      tag_32\n      jumpi\n        /* \"bidder.sol\":1982:1998  winningVoteCount */\n      dup2\n        /* \"bidder.sol\":1954:1963  proposals */\n      0x2\n        /* \"bidder.sol\":1964:1968  prop */\n      dup3\n        /* \"bidder.sol\":1954:1969  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_34\n      jumpi\n      invalid\n    tag_34:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"bidder.sol\":1954:1979  proposals[prop].voteCount */\n      0x0\n      add\n      sload\n        /* \"bidder.sol\":1954:1998  proposals[prop].voteCount > winningVoteCount */\n      gt\n        /* \"bidder.sol\":1950:2121  if (proposals[prop].voteCount > winningVoteCount) {\r... */\n      iszero\n      tag_36\n      jumpi\n        /* \"bidder.sol\":2038:2047  proposals */\n      0x2\n        /* \"bidder.sol\":2048:2052  prop */\n      dup2\n        /* \"bidder.sol\":2038:2053  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_37\n      jumpi\n      invalid\n    tag_37:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"bidder.sol\":2038:2063  proposals[prop].voteCount */\n      0x0\n      add\n      sload\n        /* \"bidder.sol\":2019:2063  winningVoteCount = proposals[prop].voteCount */\n      swap2\n      pop\n        /* \"bidder.sol\":2101:2105  prop */\n      dup1\n        /* \"bidder.sol\":2082:2105  _winningProposal = prop */\n      swap3\n      pop\n        /* \"bidder.sol\":1950:2121  if (proposals[prop].voteCount > winningVoteCount) {\r... */\n    tag_36:\n        /* \"bidder.sol\":1929:1935  prop++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"bidder.sol\":1883:2121  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n      jump(tag_31)\n    tag_32:\n        /* \"bidder.sol\":1715:2137  function winningProposal() public constant returns (uint8 _winningProposal) {\r... */\n    tag_27:\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"bidder.sol\":1283:1707  function vote(uint8 toProposal) public  {\r... */\n    tag_14:\n        /* \"bidder.sol\":1378:1398  Voter storage sender */\n      0x0\n        /* \"bidder.sol\":1347:1357  Stage.Vote */\n      0x2\n        /* \"bidder.sol\":1338:1357  stage != Stage.Vote */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_40\n      jumpi\n      invalid\n    tag_40:\n        /* \"bidder.sol\":1338:1343  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"bidder.sol\":1338:1357  stage != Stage.Vote */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_41\n      jumpi\n      invalid\n    tag_41:\n      eq\n      iszero\n        /* \"bidder.sol\":1334:1368  if (stage != Stage.Vote) {return;} */\n      iszero\n      tag_42\n      jumpi\n        /* \"bidder.sol\":1360:1367  return; */\n      jump(tag_39)\n        /* \"bidder.sol\":1334:1368  if (stage != Stage.Vote) {return;} */\n    tag_42:\n        /* \"bidder.sol\":1401:1407  voters */\n      0x1\n        /* \"bidder.sol\":1401:1419  voters[msg.sender] */\n      0x0\n        /* \"bidder.sol\":1408:1418  msg.sender */\n      caller\n        /* \"bidder.sol\":1401:1419  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"bidder.sol\":1378:1419  Voter storage sender = voters[msg.sender] */\n      swap1\n      pop\n        /* \"bidder.sol\":1434:1440  sender */\n      dup1\n        /* \"bidder.sol\":1434:1446  sender.voted */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"bidder.sol\":1434:1480  sender.voted || toProposal >= proposals.length */\n      dup1\n      tag_43\n      jumpi\n      pop\n        /* \"bidder.sol\":1464:1473  proposals */\n      0x2\n        /* \"bidder.sol\":1464:1480  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"bidder.sol\":1450:1460  toProposal */\n      dup3\n        /* \"bidder.sol\":1450:1480  toProposal >= proposals.length */\n      0xff\n      and\n      lt\n      iszero\n        /* \"bidder.sol\":1434:1480  sender.voted || toProposal >= proposals.length */\n    tag_43:\n        /* \"bidder.sol\":1430:1489  if (sender.voted || toProposal >= proposals.length) return; */\n      iszero\n      tag_44\n      jumpi\n        /* \"bidder.sol\":1482:1489  return; */\n      jump(tag_39)\n        /* \"bidder.sol\":1430:1489  if (sender.voted || toProposal >= proposals.length) return; */\n    tag_44:\n        /* \"bidder.sol\":1514:1518  true */\n      0x1\n        /* \"bidder.sol\":1499:1505  sender */\n      dup2\n        /* \"bidder.sol\":1499:1511  sender.voted */\n      0x1\n      add\n      0x0\n        /* \"bidder.sol\":1499:1518  sender.voted = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"bidder.sol\":1543:1553  toProposal */\n      dup2\n        /* \"bidder.sol\":1529:1535  sender */\n      dup2\n        /* \"bidder.sol\":1529:1540  sender.vote */\n      0x1\n      add\n      0x1\n        /* \"bidder.sol\":1529:1553  sender.vote = toProposal */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"bidder.sol\":1602:1608  sender */\n      dup1\n        /* \"bidder.sol\":1602:1615  sender.weight */\n      0x0\n      add\n      sload\n        /* \"bidder.sol\":1567:1576  proposals */\n      0x2\n        /* \"bidder.sol\":1577:1587  toProposal */\n      dup4\n        /* \"bidder.sol\":1567:1588  proposals[toProposal] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_45\n      jumpi\n      invalid\n    tag_45:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"bidder.sol\":1567:1598  proposals[toProposal].voteCount */\n      0x0\n      add\n      0x0\n        /* \"bidder.sol\":1567:1615  proposals[toProposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"bidder.sol\":1648:1658  10 seconds */\n      0xa\n        /* \"bidder.sol\":1637:1646  startTime */\n      sload(0x3)\n        /* \"bidder.sol\":1637:1658  startTime+ 10 seconds */\n      add\n        /* \"bidder.sol\":1630:1633  now */\n      timestamp\n        /* \"bidder.sol\":1630:1659  now > (startTime+ 10 seconds) */\n      gt\n        /* \"bidder.sol\":1626:1682  if (now > (startTime+ 10 seconds)) {stage = Stage.Done;} */\n      iszero\n      tag_47\n      jumpi\n        /* \"bidder.sol\":1670:1680  Stage.Done */\n      0x3\n        /* \"bidder.sol\":1662:1667  stage */\n      0x0\n      dup1\n        /* \"bidder.sol\":1662:1680  stage = Stage.Done */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x3\n      dup2\n      gt\n      iszero\n      tag_48\n      jumpi\n      invalid\n    tag_48:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"bidder.sol\":1626:1682  if (now > (startTime+ 10 seconds)) {stage = Stage.Done;} */\n    tag_47:\n        /* \"bidder.sol\":1283:1707  function vote(uint8 toProposal) public  {\r... */\n    tag_39:\n      pop\n      pop\n      jump\t// out\n        /* \"bidder.sol\":268:299  Stage public stage = Stage.Init */\n    tag_17:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058201de54c389fa5bf6ed86f1a22311b7ce34fd4cb7ee5d5e63cadc05fdc59d078e50029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260008060006101000a81548160ff0219169083600381111561002257fe5b021790555034801561003357600080fd5b506040516020806106e08339810180604052810190808051906020019092919050505033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508060ff166002816101119190610142565b5060016000806101000a81548160ff0219169083600381111561013057fe5b02179055504260038190555050610195565b81548183558181111561016957818360005260206000209182019101610168919061016e565b5b505050565b61019291905b8082111561018e5760008082016000905550600101610174565b5090565b90565b61053c806101a46000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e48614610067578063609ff1bd146100aa578063b3f98adc146100db578063c040e6b81461010b575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610144565b005b3480156100b657600080fd5b506100bf610308565b604051808260ff1660ff16815260200191505060405180910390f35b3480156100e757600080fd5b50610109600480360381019080803560ff1690602001909291905050506103b8565b005b34801561011757600080fd5b506101206104fe565b6040518082600381111561013057fe5b60ff16815260200191505060405180910390f35b6001600381111561015157fe5b6000809054906101000a900460ff16600381111561016b57fe5b14151561017757610305565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806102205750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561022a57610305565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550600a600354014211156103045760026000806101000a81548160ff021916908360038111156102f757fe5b0217905550426003819055505b5b50565b600080600060038081111561031957fe5b6000809054906101000a900460ff16600381111561033357fe5b14151561033f576103b3565b60009150600090505b6002805490508160ff1610156103b2578160028260ff1681548110151561036b57fe5b906000526020600020016000015411156103a55760028160ff1681548110151561039157fe5b906000526020600020016000015491508092505b8080600101915050610348565b5b505090565b6000600260038111156103c757fe5b6000809054906101000a900460ff1660038111156103e157fe5b1415156103ed576104fa565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff168061045357506002805490508260ff1610155b1561045d576104fa565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548160ff021916908360ff160217905550806000015460028360ff168154811015156104ae57fe5b9060005260206000200160000160008282540192505081905550600a600354014211156104f95760036000806101000a81548160ff021916908360038111156104f357fe5b02179055505b5b5050565b6000809054906101000a900460ff16815600a165627a7a723058201de54c389fa5bf6ed86f1a22311b7ce34fd4cb7ee5d5e63cadc05fdc59d078e50029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x6E0 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x142 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x130 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP PUSH2 0x195 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x169 JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x16E JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x192 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x174 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x53C DUP1 PUSH2 0x1A4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x144 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x130 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x151 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16B JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x177 JUMPI PUSH2 0x305 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x220 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x22A JUMPI PUSH2 0x305 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x304 JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F7 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x319 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x333 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x33F JUMPI PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x3B2 JUMPI DUP2 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x36B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x391 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x348 JUMP JUMPDEST JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3C7 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3E1 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x3ED JUMPI PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x453 JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x45D JUMPI PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4AE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4F3 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SAR 0xe5 0x4c CODESIZE SWAP16 0xa5 0xbf PUSH15 0xD86F1A22311B7CE34FD4CB7EE5D5E6 EXTCODECOPY 0xad 0xc0 0x5f 0xdc MSIZE 0xd0 PUSH25 0xE5002900000000000000000000000000000000000000000000 ",
							"sourceMap": "58:2082:0:-;;;289:10;268:31;;;;;;;;;;;;;;;;;;;;;;;;;;510:262;8:9:-1;5:2;;;30:1;27;20:12;5:2;510:262:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;580:10;566:11;;:24;;;;;;;;;;;;;;;;;;630:1;601:6;:19;608:11;;;;;;;;;;;601:19;;;;;;;;;;;;;;;:26;;:30;;;;697:13;678:32;;:9;:32;;;;;:::i;:::-;;729:9;721:5;;:17;;;;;;;;;;;;;;;;;;;;;;;;761:3;749:9;:15;;;;510:262;58:2082;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e48614610067578063609ff1bd146100aa578063b3f98adc146100db578063c040e6b81461010b575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610144565b005b3480156100b657600080fd5b506100bf610308565b604051808260ff1660ff16815260200191505060405180910390f35b3480156100e757600080fd5b50610109600480360381019080803560ff1690602001909291905050506103b8565b005b34801561011757600080fd5b506101206104fe565b6040518082600381111561013057fe5b60ff16815260200191505060405180910390f35b6001600381111561015157fe5b6000809054906101000a900460ff16600381111561016b57fe5b14151561017757610305565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806102205750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561022a57610305565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550600a600354014211156103045760026000806101000a81548160ff021916908360038111156102f757fe5b0217905550426003819055505b5b50565b600080600060038081111561031957fe5b6000809054906101000a900460ff16600381111561033357fe5b14151561033f576103b3565b60009150600090505b6002805490508160ff1610156103b2578160028260ff1681548110151561036b57fe5b906000526020600020016000015411156103a55760028160ff1681548110151561039157fe5b906000526020600020016000015491508092505b8080600101915050610348565b5b505090565b6000600260038111156103c757fe5b6000809054906101000a900460ff1660038111156103e157fe5b1415156103ed576104fa565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff168061045357506002805490508260ff1610155b1561045d576104fa565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548160ff021916908360ff160217905550806000015460028360ff168154811015156104ae57fe5b9060005260206000200160000160008282540192505081905550600a600354014211156104f95760036000806101000a81548160ff021916908360038111156104f357fe5b02179055505b5b5050565b6000809054906101000a900460ff16815600a165627a7a723058201de54c389fa5bf6ed86f1a22311b7ce34fd4cb7ee5d5e63cadc05fdc59d078e50029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x144 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x130 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x151 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16B JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x177 JUMPI PUSH2 0x305 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x220 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x22A JUMPI PUSH2 0x305 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x304 JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F7 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x319 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x333 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x33F JUMPI PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x3B2 JUMPI DUP2 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x36B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x391 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x348 JUMP JUMPDEST JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3C7 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3E1 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x3ED JUMPI PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x453 JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x45D JUMPI PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4AE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4F3 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SAR 0xe5 0x4c CODESIZE SWAP16 0xa5 0xbf PUSH15 0xD86F1A22311B7CE34FD4CB7EE5D5E6 EXTCODECOPY 0xad 0xc0 0x5f 0xdc MSIZE 0xd0 PUSH25 0xE5002900000000000000000000000000000000000000000000 ",
							"sourceMap": "58:2082:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;886:334;;8:9:-1;5:2;;;30:1;27;20:12;5:2;886:334:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1715:422;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1715:422:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1283:424;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1283:424:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;268:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;268:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;886:334;952:9;943:18;;;;;;;;:5;;;;;;;;;;;:18;;;;;;;;;;939:33;;;964:7;;939:33;1000:11;;;;;;;;;;;986:25;;:10;:25;;;;:50;;;;1015:6;:15;1022:7;1015:15;;;;;;;;;;;;;;;:21;;;;;;;;;;;;986:50;982:63;;;1038:7;;982:63;1080:1;1055:6;:15;1062:7;1055:15;;;;;;;;;;;;;;;:22;;:26;;;;1116:5;1092:6;:15;1099:7;1092:15;;;;;;;;;;;;;;;:21;;;:29;;;;;;;;;;;;;;;;;;1154:10;1143:9;;:21;1136:3;:29;1132:73;;;1176:10;1168:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1200:3;1188:9;:15;;;;1132:73;886:334;;:::o;1715:422::-;1767:22;1844:24;1888:10;1813;1804:19;;;;;;;;:5;;;;;;;;;;;:19;;;;;;;;;;1801:33;;;1826:7;;1801:33;1871:1;1844:28;;1901:1;1888:14;;1883:238;1911:9;:16;;;;1904:4;:23;;;1883:238;;;1982:16;1954:9;1964:4;1954:15;;;;;;;;;;;;;;;;;;;:25;;;:44;1950:171;;;2038:9;2048:4;2038:15;;;;;;;;;;;;;;;;;;;:25;;;2019:44;;2101:4;2082:23;;1950:171;1929:6;;;;;;;1883:238;;;1715:422;;;;:::o;1283:424::-;1378:20;1347:10;1338:19;;;;;;;;:5;;;;;;;;;;;:19;;;;;;;;;;1334:34;;;1360:7;;1334:34;1401:6;:18;1408:10;1401:18;;;;;;;;;;;;;;;1378:41;;1434:6;:12;;;;;;;;;;;;:46;;;;1464:9;:16;;;;1450:10;:30;;;;1434:46;1430:59;;;1482:7;;1430:59;1514:4;1499:6;:12;;;:19;;;;;;;;;;;;;;;;;;1543:10;1529:6;:11;;;:24;;;;;;;;;;;;;;;;;;1602:6;:13;;;1567:9;1577:10;1567:21;;;;;;;;;;;;;;;;;;;:31;;;:48;;;;;;;;;;;1648:10;1637:9;;:21;1630:3;:29;1626:56;;;1670:10;1662:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1626:56;1283:424;;;:::o;268:31::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "268000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"register(address)": "82199",
								"stage()": "528",
								"vote(uint8)": "83019",
								"winningProposal()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 2140,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "MSTORE"
								},
								{
									"begin": 289,
									"end": 299,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "DUP1"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "EXP"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "DUP2"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "SLOAD"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "DUP2"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "MUL"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "NOT"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "AND"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "SWAP1"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "DUP4"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "DUP2"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "GT"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "ISZERO"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "JUMPI"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "INVALID"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "JUMPDEST"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "MUL"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "OR"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "SWAP1"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "SSTORE"
								},
								{
									"begin": 268,
									"end": 299,
									"name": "POP"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "POP"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "MLOAD"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "DUP1"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "PUSHSIZE"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "DUP4"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "CODECOPY"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "DUP2"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "ADD"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "DUP1"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "MSTORE"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "DUP2"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "ADD"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "SWAP1"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "DUP1"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "DUP1"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "MLOAD"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "SWAP1"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "ADD"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "SWAP1"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "SWAP3"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "SWAP2"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "SWAP1"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "POP"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "POP"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "POP"
								},
								{
									"begin": 580,
									"end": 590,
									"name": "CALLER"
								},
								{
									"begin": 566,
									"end": 577,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 566,
									"end": 577,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 566,
									"end": 590,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 566,
									"end": 590,
									"name": "EXP"
								},
								{
									"begin": 566,
									"end": 590,
									"name": "DUP2"
								},
								{
									"begin": 566,
									"end": 590,
									"name": "SLOAD"
								},
								{
									"begin": 566,
									"end": 590,
									"name": "DUP2"
								},
								{
									"begin": 566,
									"end": 590,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 566,
									"end": 590,
									"name": "MUL"
								},
								{
									"begin": 566,
									"end": 590,
									"name": "NOT"
								},
								{
									"begin": 566,
									"end": 590,
									"name": "AND"
								},
								{
									"begin": 566,
									"end": 590,
									"name": "SWAP1"
								},
								{
									"begin": 566,
									"end": 590,
									"name": "DUP4"
								},
								{
									"begin": 566,
									"end": 590,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 566,
									"end": 590,
									"name": "AND"
								},
								{
									"begin": 566,
									"end": 590,
									"name": "MUL"
								},
								{
									"begin": 566,
									"end": 590,
									"name": "OR"
								},
								{
									"begin": 566,
									"end": 590,
									"name": "SWAP1"
								},
								{
									"begin": 566,
									"end": 590,
									"name": "SSTORE"
								},
								{
									"begin": 566,
									"end": 590,
									"name": "POP"
								},
								{
									"begin": 630,
									"end": 631,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 601,
									"end": 607,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 601,
									"end": 620,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 608,
									"end": 619,
									"name": "DUP1"
								},
								{
									"begin": 608,
									"end": 619,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 608,
									"end": 619,
									"name": "SWAP1"
								},
								{
									"begin": 608,
									"end": 619,
									"name": "SLOAD"
								},
								{
									"begin": 608,
									"end": 619,
									"name": "SWAP1"
								},
								{
									"begin": 608,
									"end": 619,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 608,
									"end": 619,
									"name": "EXP"
								},
								{
									"begin": 608,
									"end": 619,
									"name": "SWAP1"
								},
								{
									"begin": 608,
									"end": 619,
									"name": "DIV"
								},
								{
									"begin": 608,
									"end": 619,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 608,
									"end": 619,
									"name": "AND"
								},
								{
									"begin": 601,
									"end": 620,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 601,
									"end": 620,
									"name": "AND"
								},
								{
									"begin": 601,
									"end": 620,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 601,
									"end": 620,
									"name": "AND"
								},
								{
									"begin": 601,
									"end": 620,
									"name": "DUP2"
								},
								{
									"begin": 601,
									"end": 620,
									"name": "MSTORE"
								},
								{
									"begin": 601,
									"end": 620,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 601,
									"end": 620,
									"name": "ADD"
								},
								{
									"begin": 601,
									"end": 620,
									"name": "SWAP1"
								},
								{
									"begin": 601,
									"end": 620,
									"name": "DUP2"
								},
								{
									"begin": 601,
									"end": 620,
									"name": "MSTORE"
								},
								{
									"begin": 601,
									"end": 620,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 601,
									"end": 620,
									"name": "ADD"
								},
								{
									"begin": 601,
									"end": 620,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 601,
									"end": 620,
									"name": "KECCAK256"
								},
								{
									"begin": 601,
									"end": 627,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 601,
									"end": 627,
									"name": "ADD"
								},
								{
									"begin": 601,
									"end": 631,
									"name": "DUP2"
								},
								{
									"begin": 601,
									"end": 631,
									"name": "SWAP1"
								},
								{
									"begin": 601,
									"end": 631,
									"name": "SSTORE"
								},
								{
									"begin": 601,
									"end": 631,
									"name": "POP"
								},
								{
									"begin": 697,
									"end": 710,
									"name": "DUP1"
								},
								{
									"begin": 678,
									"end": 710,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 678,
									"end": 710,
									"name": "AND"
								},
								{
									"begin": 678,
									"end": 687,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 678,
									"end": 710,
									"name": "DUP2"
								},
								{
									"begin": 678,
									"end": 710,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 678,
									"end": 710,
									"name": "SWAP2"
								},
								{
									"begin": 678,
									"end": 710,
									"name": "SWAP1"
								},
								{
									"begin": 678,
									"end": 710,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 678,
									"end": 710,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 678,
									"end": 710,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 678,
									"end": 710,
									"name": "JUMPDEST"
								},
								{
									"begin": 678,
									"end": 710,
									"name": "POP"
								},
								{
									"begin": 729,
									"end": 738,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 721,
									"end": 726,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 721,
									"end": 726,
									"name": "DUP1"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "EXP"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "DUP2"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "SLOAD"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "DUP2"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "MUL"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "NOT"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "AND"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "SWAP1"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "DUP4"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "DUP2"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "GT"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "ISZERO"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "JUMPI"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "INVALID"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "JUMPDEST"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "MUL"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "OR"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "SWAP1"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "SSTORE"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "POP"
								},
								{
									"begin": 761,
									"end": 764,
									"name": "TIMESTAMP"
								},
								{
									"begin": 749,
									"end": 758,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 749,
									"end": 764,
									"name": "DUP2"
								},
								{
									"begin": 749,
									"end": 764,
									"name": "SWAP1"
								},
								{
									"begin": 749,
									"end": 764,
									"name": "SSTORE"
								},
								{
									"begin": 749,
									"end": 764,
									"name": "POP"
								},
								{
									"begin": 510,
									"end": 772,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "JUMP"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "SLOAD"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "DUP4"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "SSTORE"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "GT"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "ISZERO"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "JUMPI"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "DUP4"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "MSTORE"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "KECCAK256"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "SWAP2"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "DUP3"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "ADD"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "SWAP2"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "ADD"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "SWAP2"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "SWAP2"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "DUP1"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "DUP3"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "GT"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "ISZERO"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "JUMPI"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "DUP1"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "DUP3"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "ADD"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "SSTORE"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "ADD"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "JUMP"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "JUMP"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "DUP1"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "CODECOPY"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2140,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058201de54c389fa5bf6ed86f1a22311b7ce34fd4cb7ee5d5e63cadc05fdc59d078e50029",
									".code": [
										{
											"begin": 58,
											"end": 2140,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "MSTORE"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "LT"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "DIV"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "AND"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "PUSH",
											"value": "609FF1BD"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "PUSH",
											"value": "B3F98ADC"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "PUSH",
											"value": "C040E6B8"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 2140,
											"name": "REVERT"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "JUMPDEST"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "POP"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "DUP1"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "SUB"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "DUP2"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "ADD"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "SWAP1"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "DUP1"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "DUP1"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "AND"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "SWAP1"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "ADD"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "SWAP1"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "SWAP3"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "SWAP2"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "SWAP1"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "POP"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "POP"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "POP"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "JUMP"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "JUMPDEST"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "STOP"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "JUMPDEST"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "POP"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "JUMP"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "JUMPDEST"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "MLOAD"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "DUP1"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "DUP3"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "AND"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "AND"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "DUP2"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "MSTORE"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "ADD"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "SWAP2"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "POP"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "POP"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "MLOAD"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "DUP1"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "SWAP2"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "SUB"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "SWAP1"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "RETURN"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "JUMPDEST"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "POP"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "DUP1"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "SUB"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "DUP2"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "ADD"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "SWAP1"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "DUP1"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "DUP1"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "AND"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "SWAP1"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "ADD"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "SWAP1"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "SWAP3"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "SWAP2"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "SWAP1"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "POP"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "POP"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "POP"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "JUMP"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "JUMPDEST"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "STOP"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "JUMPDEST"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "POP"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "JUMP"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "JUMPDEST"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "MLOAD"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "DUP3"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "DUP2"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "GT"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "ISZERO"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "JUMPI"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "INVALID"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "JUMPDEST"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "AND"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "DUP2"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "MSTORE"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "ADD"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "SWAP2"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "POP"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "POP"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "MLOAD"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "SWAP2"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "SUB"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "SWAP1"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "RETURN"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "JUMPDEST"
										},
										{
											"begin": 952,
											"end": 961,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "DUP2"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "GT"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "ISZERO"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "JUMPI"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "INVALID"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "JUMPDEST"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "DUP1"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "SWAP1"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "SLOAD"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "SWAP1"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "EXP"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "SWAP1"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "DIV"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "AND"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "DUP2"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "GT"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "ISZERO"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "JUMPI"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "INVALID"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "JUMPDEST"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "EQ"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "ISZERO"
										},
										{
											"begin": 939,
											"end": 972,
											"name": "ISZERO"
										},
										{
											"begin": 939,
											"end": 972,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 939,
											"end": 972,
											"name": "JUMPI"
										},
										{
											"begin": 964,
											"end": 971,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 964,
											"end": 971,
											"name": "JUMP"
										},
										{
											"begin": 939,
											"end": 972,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 939,
											"end": 972,
											"name": "JUMPDEST"
										},
										{
											"begin": 1000,
											"end": 1011,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1011,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1000,
											"end": 1011,
											"name": "SWAP1"
										},
										{
											"begin": 1000,
											"end": 1011,
											"name": "SLOAD"
										},
										{
											"begin": 1000,
											"end": 1011,
											"name": "SWAP1"
										},
										{
											"begin": 1000,
											"end": 1011,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1000,
											"end": 1011,
											"name": "EXP"
										},
										{
											"begin": 1000,
											"end": 1011,
											"name": "SWAP1"
										},
										{
											"begin": 1000,
											"end": 1011,
											"name": "DIV"
										},
										{
											"begin": 1000,
											"end": 1011,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1000,
											"end": 1011,
											"name": "AND"
										},
										{
											"begin": 986,
											"end": 1011,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 986,
											"end": 1011,
											"name": "AND"
										},
										{
											"begin": 986,
											"end": 996,
											"name": "CALLER"
										},
										{
											"begin": 986,
											"end": 1011,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 986,
											"end": 1011,
											"name": "AND"
										},
										{
											"begin": 986,
											"end": 1011,
											"name": "EQ"
										},
										{
											"begin": 986,
											"end": 1011,
											"name": "ISZERO"
										},
										{
											"begin": 986,
											"end": 1036,
											"name": "DUP1"
										},
										{
											"begin": 986,
											"end": 1036,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 986,
											"end": 1036,
											"name": "JUMPI"
										},
										{
											"begin": 986,
											"end": 1036,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1021,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1015,
											"end": 1030,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1029,
											"name": "DUP3"
										},
										{
											"begin": 1015,
											"end": 1030,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1015,
											"end": 1030,
											"name": "AND"
										},
										{
											"begin": 1015,
											"end": 1030,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1015,
											"end": 1030,
											"name": "AND"
										},
										{
											"begin": 1015,
											"end": 1030,
											"name": "DUP2"
										},
										{
											"begin": 1015,
											"end": 1030,
											"name": "MSTORE"
										},
										{
											"begin": 1015,
											"end": 1030,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1015,
											"end": 1030,
											"name": "ADD"
										},
										{
											"begin": 1015,
											"end": 1030,
											"name": "SWAP1"
										},
										{
											"begin": 1015,
											"end": 1030,
											"name": "DUP2"
										},
										{
											"begin": 1015,
											"end": 1030,
											"name": "MSTORE"
										},
										{
											"begin": 1015,
											"end": 1030,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1015,
											"end": 1030,
											"name": "ADD"
										},
										{
											"begin": 1015,
											"end": 1030,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1015,
											"end": 1030,
											"name": "KECCAK256"
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "ADD"
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "SLOAD"
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "EXP"
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "DIV"
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 986,
											"end": 1036,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 986,
											"end": 1036,
											"name": "JUMPDEST"
										},
										{
											"begin": 982,
											"end": 1045,
											"name": "ISZERO"
										},
										{
											"begin": 982,
											"end": 1045,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 982,
											"end": 1045,
											"name": "JUMPI"
										},
										{
											"begin": 1038,
											"end": 1045,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1038,
											"end": 1045,
											"name": "JUMP"
										},
										{
											"begin": 982,
											"end": 1045,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 982,
											"end": 1045,
											"name": "JUMPDEST"
										},
										{
											"begin": 1080,
											"end": 1081,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1055,
											"end": 1061,
											"name": "DUP1"
										},
										{
											"begin": 1055,
											"end": 1070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "DUP4"
										},
										{
											"begin": 1055,
											"end": 1070,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1055,
											"end": 1070,
											"name": "AND"
										},
										{
											"begin": 1055,
											"end": 1070,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1055,
											"end": 1070,
											"name": "AND"
										},
										{
											"begin": 1055,
											"end": 1070,
											"name": "DUP2"
										},
										{
											"begin": 1055,
											"end": 1070,
											"name": "MSTORE"
										},
										{
											"begin": 1055,
											"end": 1070,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 1070,
											"name": "ADD"
										},
										{
											"begin": 1055,
											"end": 1070,
											"name": "SWAP1"
										},
										{
											"begin": 1055,
											"end": 1070,
											"name": "DUP2"
										},
										{
											"begin": 1055,
											"end": 1070,
											"name": "MSTORE"
										},
										{
											"begin": 1055,
											"end": 1070,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 1070,
											"name": "ADD"
										},
										{
											"begin": 1055,
											"end": 1070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1070,
											"name": "KECCAK256"
										},
										{
											"begin": 1055,
											"end": 1077,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1077,
											"name": "ADD"
										},
										{
											"begin": 1055,
											"end": 1081,
											"name": "DUP2"
										},
										{
											"begin": 1055,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1055,
											"end": 1081,
											"name": "SSTORE"
										},
										{
											"begin": 1055,
											"end": 1081,
											"name": "POP"
										},
										{
											"begin": 1116,
											"end": 1121,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1092,
											"end": 1098,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1092,
											"end": 1107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP4"
										},
										{
											"begin": 1092,
											"end": 1107,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1092,
											"end": 1107,
											"name": "AND"
										},
										{
											"begin": 1092,
											"end": 1107,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1092,
											"end": 1107,
											"name": "AND"
										},
										{
											"begin": 1092,
											"end": 1107,
											"name": "DUP2"
										},
										{
											"begin": 1092,
											"end": 1107,
											"name": "MSTORE"
										},
										{
											"begin": 1092,
											"end": 1107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1092,
											"end": 1107,
											"name": "ADD"
										},
										{
											"begin": 1092,
											"end": 1107,
											"name": "SWAP1"
										},
										{
											"begin": 1092,
											"end": 1107,
											"name": "DUP2"
										},
										{
											"begin": 1092,
											"end": 1107,
											"name": "MSTORE"
										},
										{
											"begin": 1092,
											"end": 1107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1092,
											"end": 1107,
											"name": "ADD"
										},
										{
											"begin": 1092,
											"end": 1107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1092,
											"end": 1107,
											"name": "KECCAK256"
										},
										{
											"begin": 1092,
											"end": 1113,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1092,
											"end": 1113,
											"name": "ADD"
										},
										{
											"begin": 1092,
											"end": 1113,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "EXP"
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "DUP2"
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "SLOAD"
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "DUP2"
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "MUL"
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "NOT"
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "AND"
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "SWAP1"
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "DUP4"
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "ISZERO"
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "ISZERO"
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "MUL"
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "OR"
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "SWAP1"
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "SSTORE"
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "POP"
										},
										{
											"begin": 1154,
											"end": 1164,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1143,
											"end": 1152,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1152,
											"name": "SLOAD"
										},
										{
											"begin": 1143,
											"end": 1164,
											"name": "ADD"
										},
										{
											"begin": 1136,
											"end": 1139,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1136,
											"end": 1165,
											"name": "GT"
										},
										{
											"begin": 1132,
											"end": 1205,
											"name": "ISZERO"
										},
										{
											"begin": 1132,
											"end": 1205,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1132,
											"end": 1205,
											"name": "JUMPI"
										},
										{
											"begin": 1176,
											"end": 1186,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP1"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "EXP"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "DUP2"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "SLOAD"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "DUP2"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "MUL"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "NOT"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "AND"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "SWAP1"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "DUP4"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "DUP2"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "GT"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "ISZERO"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "JUMPI"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "INVALID"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "JUMPDEST"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "MUL"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "OR"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "SWAP1"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "SSTORE"
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "POP"
										},
										{
											"begin": 1200,
											"end": 1203,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1188,
											"end": 1197,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1188,
											"end": 1203,
											"name": "DUP2"
										},
										{
											"begin": 1188,
											"end": 1203,
											"name": "SWAP1"
										},
										{
											"begin": 1188,
											"end": 1203,
											"name": "SSTORE"
										},
										{
											"begin": 1188,
											"end": 1203,
											"name": "POP"
										},
										{
											"begin": 1132,
											"end": 1205,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1132,
											"end": 1205,
											"name": "JUMPDEST"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "JUMPDEST"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "POP"
										},
										{
											"begin": 886,
											"end": 1220,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "JUMPDEST"
										},
										{
											"begin": 1767,
											"end": 1789,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1868,
											"name": "DUP1"
										},
										{
											"begin": 1888,
											"end": 1898,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "DUP1"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "DUP2"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "GT"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "ISZERO"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "JUMPI"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "INVALID"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "JUMPDEST"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "DUP1"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "SWAP1"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "SLOAD"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "SWAP1"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "EXP"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "SWAP1"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "DIV"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "AND"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "DUP2"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "GT"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "ISZERO"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "JUMPI"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "INVALID"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "JUMPDEST"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "EQ"
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "ISZERO"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "ISZERO"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "JUMPI"
										},
										{
											"begin": 1826,
											"end": 1833,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1826,
											"end": 1833,
											"name": "JUMP"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "JUMPDEST"
										},
										{
											"begin": 1871,
											"end": 1872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1872,
											"name": "SWAP2"
										},
										{
											"begin": 1844,
											"end": 1872,
											"name": "POP"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 1883,
											"end": 2121,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1883,
											"end": 2121,
											"name": "JUMPDEST"
										},
										{
											"begin": 1911,
											"end": 1920,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1911,
											"end": 1927,
											"name": "DUP1"
										},
										{
											"begin": 1911,
											"end": 1927,
											"name": "SLOAD"
										},
										{
											"begin": 1911,
											"end": 1927,
											"name": "SWAP1"
										},
										{
											"begin": 1911,
											"end": 1927,
											"name": "POP"
										},
										{
											"begin": 1904,
											"end": 1908,
											"name": "DUP2"
										},
										{
											"begin": 1904,
											"end": 1927,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1904,
											"end": 1927,
											"name": "AND"
										},
										{
											"begin": 1904,
											"end": 1927,
											"name": "LT"
										},
										{
											"begin": 1883,
											"end": 2121,
											"name": "ISZERO"
										},
										{
											"begin": 1883,
											"end": 2121,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1883,
											"end": 2121,
											"name": "JUMPI"
										},
										{
											"begin": 1982,
											"end": 1998,
											"name": "DUP2"
										},
										{
											"begin": 1954,
											"end": 1963,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1964,
											"end": 1968,
											"name": "DUP3"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "AND"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "DUP2"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "SLOAD"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "DUP2"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "LT"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "ISZERO"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "ISZERO"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "JUMPI"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "INVALID"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "JUMPDEST"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "SWAP1"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "MSTORE"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "KECCAK256"
										},
										{
											"begin": 1954,
											"end": 1969,
											"name": "ADD"
										},
										{
											"begin": 1954,
											"end": 1979,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1979,
											"name": "ADD"
										},
										{
											"begin": 1954,
											"end": 1979,
											"name": "SLOAD"
										},
										{
											"begin": 1954,
											"end": 1998,
											"name": "GT"
										},
										{
											"begin": 1950,
											"end": 2121,
											"name": "ISZERO"
										},
										{
											"begin": 1950,
											"end": 2121,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1950,
											"end": 2121,
											"name": "JUMPI"
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2048,
											"end": 2052,
											"name": "DUP2"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "AND"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "DUP2"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "SLOAD"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "DUP2"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "LT"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "ISZERO"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "ISZERO"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "JUMPI"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "INVALID"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "JUMPDEST"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "SWAP1"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "MSTORE"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "KECCAK256"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "ADD"
										},
										{
											"begin": 2038,
											"end": 2063,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2063,
											"name": "ADD"
										},
										{
											"begin": 2038,
											"end": 2063,
											"name": "SLOAD"
										},
										{
											"begin": 2019,
											"end": 2063,
											"name": "SWAP2"
										},
										{
											"begin": 2019,
											"end": 2063,
											"name": "POP"
										},
										{
											"begin": 2101,
											"end": 2105,
											"name": "DUP1"
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "SWAP3"
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "POP"
										},
										{
											"begin": 1950,
											"end": 2121,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1950,
											"end": 2121,
											"name": "JUMPDEST"
										},
										{
											"begin": 1929,
											"end": 1935,
											"name": "DUP1"
										},
										{
											"begin": 1929,
											"end": 1935,
											"name": "DUP1"
										},
										{
											"begin": 1929,
											"end": 1935,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1929,
											"end": 1935,
											"name": "ADD"
										},
										{
											"begin": 1929,
											"end": 1935,
											"name": "SWAP2"
										},
										{
											"begin": 1929,
											"end": 1935,
											"name": "POP"
										},
										{
											"begin": 1929,
											"end": 1935,
											"name": "POP"
										},
										{
											"begin": 1883,
											"end": 2121,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1883,
											"end": 2121,
											"name": "JUMP"
										},
										{
											"begin": 1883,
											"end": 2121,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1883,
											"end": 2121,
											"name": "JUMPDEST"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "JUMPDEST"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "POP"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "POP"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "SWAP1"
										},
										{
											"begin": 1715,
											"end": 2137,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "JUMPDEST"
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1357,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "DUP2"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "GT"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "ISZERO"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "JUMPI"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "INVALID"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "JUMPDEST"
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "DUP1"
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SWAP1"
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SLOAD"
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SWAP1"
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "EXP"
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SWAP1"
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "DIV"
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "AND"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "DUP2"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "GT"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "ISZERO"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "JUMPI"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "INVALID"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "JUMPDEST"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "EQ"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "ISZERO"
										},
										{
											"begin": 1334,
											"end": 1368,
											"name": "ISZERO"
										},
										{
											"begin": 1334,
											"end": 1368,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1334,
											"end": 1368,
											"name": "JUMPI"
										},
										{
											"begin": 1360,
											"end": 1367,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1360,
											"end": 1367,
											"name": "JUMP"
										},
										{
											"begin": 1334,
											"end": 1368,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1334,
											"end": 1368,
											"name": "JUMPDEST"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 1419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1418,
											"name": "CALLER"
										},
										{
											"begin": 1401,
											"end": 1419,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1401,
											"end": 1419,
											"name": "AND"
										},
										{
											"begin": 1401,
											"end": 1419,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1401,
											"end": 1419,
											"name": "AND"
										},
										{
											"begin": 1401,
											"end": 1419,
											"name": "DUP2"
										},
										{
											"begin": 1401,
											"end": 1419,
											"name": "MSTORE"
										},
										{
											"begin": 1401,
											"end": 1419,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1401,
											"end": 1419,
											"name": "ADD"
										},
										{
											"begin": 1401,
											"end": 1419,
											"name": "SWAP1"
										},
										{
											"begin": 1401,
											"end": 1419,
											"name": "DUP2"
										},
										{
											"begin": 1401,
											"end": 1419,
											"name": "MSTORE"
										},
										{
											"begin": 1401,
											"end": 1419,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1401,
											"end": 1419,
											"name": "ADD"
										},
										{
											"begin": 1401,
											"end": 1419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1419,
											"name": "KECCAK256"
										},
										{
											"begin": 1378,
											"end": 1419,
											"name": "SWAP1"
										},
										{
											"begin": 1378,
											"end": 1419,
											"name": "POP"
										},
										{
											"begin": 1434,
											"end": 1440,
											"name": "DUP1"
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "ADD"
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "SWAP1"
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "SLOAD"
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "SWAP1"
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "EXP"
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "SWAP1"
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "DIV"
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "AND"
										},
										{
											"begin": 1434,
											"end": 1480,
											"name": "DUP1"
										},
										{
											"begin": 1434,
											"end": 1480,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1434,
											"end": 1480,
											"name": "JUMPI"
										},
										{
											"begin": 1434,
											"end": 1480,
											"name": "POP"
										},
										{
											"begin": 1464,
											"end": 1473,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1464,
											"end": 1480,
											"name": "DUP1"
										},
										{
											"begin": 1464,
											"end": 1480,
											"name": "SLOAD"
										},
										{
											"begin": 1464,
											"end": 1480,
											"name": "SWAP1"
										},
										{
											"begin": 1464,
											"end": 1480,
											"name": "POP"
										},
										{
											"begin": 1450,
											"end": 1460,
											"name": "DUP3"
										},
										{
											"begin": 1450,
											"end": 1480,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1450,
											"end": 1480,
											"name": "AND"
										},
										{
											"begin": 1450,
											"end": 1480,
											"name": "LT"
										},
										{
											"begin": 1450,
											"end": 1480,
											"name": "ISZERO"
										},
										{
											"begin": 1434,
											"end": 1480,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 1434,
											"end": 1480,
											"name": "JUMPDEST"
										},
										{
											"begin": 1430,
											"end": 1489,
											"name": "ISZERO"
										},
										{
											"begin": 1430,
											"end": 1489,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1430,
											"end": 1489,
											"name": "JUMPI"
										},
										{
											"begin": 1482,
											"end": 1489,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1482,
											"end": 1489,
											"name": "JUMP"
										},
										{
											"begin": 1430,
											"end": 1489,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1430,
											"end": 1489,
											"name": "JUMPDEST"
										},
										{
											"begin": 1514,
											"end": 1518,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "DUP2"
										},
										{
											"begin": 1499,
											"end": 1511,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1499,
											"end": 1511,
											"name": "ADD"
										},
										{
											"begin": 1499,
											"end": 1511,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "EXP"
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "DUP2"
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "SLOAD"
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "DUP2"
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "MUL"
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "NOT"
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "AND"
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "SWAP1"
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "DUP4"
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "ISZERO"
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "ISZERO"
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "MUL"
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "OR"
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "SWAP1"
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "SSTORE"
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "POP"
										},
										{
											"begin": 1543,
											"end": 1553,
											"name": "DUP2"
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "DUP2"
										},
										{
											"begin": 1529,
											"end": 1540,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1529,
											"end": 1540,
											"name": "ADD"
										},
										{
											"begin": 1529,
											"end": 1540,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1529,
											"end": 1553,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1529,
											"end": 1553,
											"name": "EXP"
										},
										{
											"begin": 1529,
											"end": 1553,
											"name": "DUP2"
										},
										{
											"begin": 1529,
											"end": 1553,
											"name": "SLOAD"
										},
										{
											"begin": 1529,
											"end": 1553,
											"name": "DUP2"
										},
										{
											"begin": 1529,
											"end": 1553,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1529,
											"end": 1553,
											"name": "MUL"
										},
										{
											"begin": 1529,
											"end": 1553,
											"name": "NOT"
										},
										{
											"begin": 1529,
											"end": 1553,
											"name": "AND"
										},
										{
											"begin": 1529,
											"end": 1553,
											"name": "SWAP1"
										},
										{
											"begin": 1529,
											"end": 1553,
											"name": "DUP4"
										},
										{
											"begin": 1529,
											"end": 1553,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1529,
											"end": 1553,
											"name": "AND"
										},
										{
											"begin": 1529,
											"end": 1553,
											"name": "MUL"
										},
										{
											"begin": 1529,
											"end": 1553,
											"name": "OR"
										},
										{
											"begin": 1529,
											"end": 1553,
											"name": "SWAP1"
										},
										{
											"begin": 1529,
											"end": 1553,
											"name": "SSTORE"
										},
										{
											"begin": 1529,
											"end": 1553,
											"name": "POP"
										},
										{
											"begin": 1602,
											"end": 1608,
											"name": "DUP1"
										},
										{
											"begin": 1602,
											"end": 1615,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1602,
											"end": 1615,
											"name": "ADD"
										},
										{
											"begin": 1602,
											"end": 1615,
											"name": "SLOAD"
										},
										{
											"begin": 1567,
											"end": 1576,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1577,
											"end": 1587,
											"name": "DUP4"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "AND"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "DUP2"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "SLOAD"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "DUP2"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "LT"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "ISZERO"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "ISZERO"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "JUMPI"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "INVALID"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "JUMPDEST"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "SWAP1"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "MSTORE"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "KECCAK256"
										},
										{
											"begin": 1567,
											"end": 1588,
											"name": "ADD"
										},
										{
											"begin": 1567,
											"end": 1598,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1598,
											"name": "ADD"
										},
										{
											"begin": 1567,
											"end": 1598,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1615,
											"name": "DUP3"
										},
										{
											"begin": 1567,
											"end": 1615,
											"name": "DUP3"
										},
										{
											"begin": 1567,
											"end": 1615,
											"name": "SLOAD"
										},
										{
											"begin": 1567,
											"end": 1615,
											"name": "ADD"
										},
										{
											"begin": 1567,
											"end": 1615,
											"name": "SWAP3"
										},
										{
											"begin": 1567,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1567,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1567,
											"end": 1615,
											"name": "DUP2"
										},
										{
											"begin": 1567,
											"end": 1615,
											"name": "SWAP1"
										},
										{
											"begin": 1567,
											"end": 1615,
											"name": "SSTORE"
										},
										{
											"begin": 1567,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1648,
											"end": 1658,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1637,
											"end": 1646,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1637,
											"end": 1646,
											"name": "SLOAD"
										},
										{
											"begin": 1637,
											"end": 1658,
											"name": "ADD"
										},
										{
											"begin": 1630,
											"end": 1633,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1630,
											"end": 1659,
											"name": "GT"
										},
										{
											"begin": 1626,
											"end": 1682,
											"name": "ISZERO"
										},
										{
											"begin": 1626,
											"end": 1682,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1626,
											"end": 1682,
											"name": "JUMPI"
										},
										{
											"begin": 1670,
											"end": 1680,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1662,
											"end": 1667,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1667,
											"name": "DUP1"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "EXP"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "DUP2"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "SLOAD"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "DUP2"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "MUL"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "NOT"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "AND"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "SWAP1"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "DUP4"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "DUP2"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "GT"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "ISZERO"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "JUMPI"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "INVALID"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "JUMPDEST"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "MUL"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "OR"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "SWAP1"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "SSTORE"
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "POP"
										},
										{
											"begin": 1626,
											"end": 1682,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1626,
											"end": 1682,
											"name": "JUMPDEST"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "JUMPDEST"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "POP"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "POP"
										},
										{
											"begin": 1283,
											"end": 1707,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "JUMPDEST"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "SWAP1"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "SLOAD"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "SWAP1"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "EXP"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "SWAP1"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "DIV"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "AND"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "DUP2"
										},
										{
											"begin": 268,
											"end": 299,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"register(address)": "4420e486",
							"stage()": "c040e6b8",
							"vote(uint8)": "b3f98adc",
							"winningProposal()": "609ff1bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"toVoter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"name\":\"_winningProposal\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toProposal\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_numProposals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"register(address)\":{\"notice\":\"May only be called by $(chairperson).\"},\"vote(uint8)\":{\"notice\":\"Give a single vote to proposal $(toProposal).\"}}}},\"settings\":{\"compilationTarget\":{\"bidder.sol\":\"Ballot\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"bidder.sol\":{\"keccak256\":\"0xf1c200502dd5a005d7bc2a4ace6739f4cc90e95a2e44dfc2fe1ea59798fb6d30\",\"urls\":[\"bzzr://e905bb8d55a23e64791350f2f8f5893bb36df0e8724957e5e862efcab0a18e1f\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"register(address)": {
								"notice": "May only be called by $(chairperson)."
							},
							"vote(uint8)": {
								"notice": "Give a single vote to proposal $(toProposal)."
							}
						}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "bidder.sol:24:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Ballot(uint8 _numProposals) public  {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 772,
					"file": "bidder.sol",
					"start": 510
				},
				"type": "Warning"
			}
		],
		"sources": {
			"bidder.sol": {
				"ast": {
					"absolutePath": "bidder.sol",
					"exportedSymbols": {
						"Ballot": [
							230
						]
					},
					"id": 231,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 230,
							"linearizedBaseContracts": [
								230
							],
							"name": "Ballot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "107:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "107:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "129:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "129:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "150:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 6,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "150:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 230,
									"src": "83:85:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "201:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "201:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 230,
									"src": "174:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Stage",
									"id": 16,
									"members": [
										{
											"id": 12,
											"name": "Init",
											"nodeType": "EnumValue",
											"src": "241:4:0"
										},
										{
											"id": 13,
											"name": "Reg",
											"nodeType": "EnumValue",
											"src": "246:3:0"
										},
										{
											"id": 14,
											"name": "Vote",
											"nodeType": "EnumValue",
											"src": "251:4:0"
										},
										{
											"id": 15,
											"name": "Done",
											"nodeType": "EnumValue",
											"src": "257:4:0"
										}
									],
									"name": "Stage",
									"nodeType": "EnumDefinition",
									"src": "229:33:0"
								},
								{
									"constant": false,
									"id": 20,
									"name": "stage",
									"nodeType": "VariableDeclaration",
									"scope": 230,
									"src": "268:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Stage_$16",
										"typeString": "enum Ballot.Stage"
									},
									"typeName": {
										"contractScope": null,
										"id": 17,
										"name": "Stage",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 16,
										"src": "268:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$16",
											"typeString": "enum Ballot.Stage"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"id": 18,
											"name": "Stage",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 16,
											"src": "289:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
												"typeString": "type(enum Ballot.Stage)"
											}
										},
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "Init",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "289:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$16",
											"typeString": "enum Ballot.Stage"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"scope": 230,
									"src": "312:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 21,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "312:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 26,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 230,
									"src": "338:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "346:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "338:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 24,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "357:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 29,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 230,
									"src": "377:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 27,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 11,
											"src": "377:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$11_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 28,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "377:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 31,
									"name": "startTime",
									"nodeType": "VariableDeclaration",
									"scope": 230,
									"src": "412:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 30,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "412:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "555:217:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 36,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "566:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 37,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "580:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "580:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "566:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "566:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 41,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "601:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 43,
															"indexExpression": {
																"argumentTypes": null,
																"id": 42,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "608:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "601:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 44,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "601:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "630:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "601:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "601:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 48,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "678:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "678:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 51,
														"name": "_numProposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "697:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "678:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "678:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 54,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "721:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 55,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "729:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Reg",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "729:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "721:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "721:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 59,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "749:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 60,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "761:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "749:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "749:15:0"
											}
										]
									},
									"documentation": "Create a new ballot with $(_numProposals) different proposals.",
									"id": 64,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Ballot",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"name": "_numProposals",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "526:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 32,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "526:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "525:21:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "555:0:0"
									},
									"scope": 230,
									"src": "510:262:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "928:292:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 69,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "943:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 70,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "952:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Reg",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "952:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "943:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 75,
												"nodeType": "IfStatement",
												"src": "939:33:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "963:9:0",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 68,
															"id": 73,
															"nodeType": "Return",
															"src": "964:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 76,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "986:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "986:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 78,
															"name": "chairperson",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "1000:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "986:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 80,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1015:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 82,
															"indexExpression": {
																"argumentTypes": null,
																"id": 81,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "1022:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1015:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1015:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "986:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 86,
												"nodeType": "IfStatement",
												"src": "982:63:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 68,
													"id": 85,
													"nodeType": "Return",
													"src": "1038:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 87,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1055:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 89,
															"indexExpression": {
																"argumentTypes": null,
																"id": 88,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "1062:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1055:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1055:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1080:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1055:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1055:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 94,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1092:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 96,
															"indexExpression": {
																"argumentTypes": null,
																"id": 95,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "1099:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1092:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1092:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1116:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1092:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1092:29:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 101,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "1136:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 102,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "1143:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1154:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1143:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 105,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1142:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1136:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 117,
												"nodeType": "IfStatement",
												"src": "1132:73:0",
												"trueBody": {
													"id": 116,
													"nodeType": "Block",
													"src": "1167:38:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 107,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 108,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "1176:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																			"typeString": "type(enum Ballot.Stage)"
																		}
																	},
																	"id": 109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Vote",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1176:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"src": "1168:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"id": 111,
															"nodeType": "ExpressionStatement",
															"src": "1168:18:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 112,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "1188:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 113,
																	"name": "now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "1200:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1188:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 115,
															"nodeType": "ExpressionStatement",
															"src": "1188:15:0"
														}
													]
												}
											}
										]
									},
									"documentation": "May only be called by $(chairperson).",
									"id": 119,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"name": "toVoter",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "904:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "903:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "928:0:0"
									},
									"scope": 230,
									"src": "886:334:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "1323:384:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1338:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 125,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "1347:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1347:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "1338:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 130,
												"nodeType": "IfStatement",
												"src": "1334:34:0",
												"trueBody": {
													"id": 129,
													"nodeType": "Block",
													"src": "1359:9:0",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 123,
															"id": 128,
															"nodeType": "Return",
															"src": "1360:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													132
												],
												"declarations": [
													{
														"constant": false,
														"id": 132,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"scope": 181,
														"src": "1378:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 131,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 8,
															"src": "1378:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 137,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 133,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1401:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 136,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 134,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "1408:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1408:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1401:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$8_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1378:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 138,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "1434:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 139,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1434:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 140,
															"name": "toProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "1450:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 141,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1464:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1464:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1450:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1434:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 146,
												"nodeType": "IfStatement",
												"src": "1430:59:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 123,
													"id": 145,
													"nodeType": "Return",
													"src": "1482:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 147,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "1499:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1499:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1514:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1499:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1499:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 153,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "1529:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 155,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 156,
														"name": "toProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "1543:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1529:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "1529:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 159,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1567:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 161,
															"indexExpression": {
																"argumentTypes": null,
																"id": 160,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "1577:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1567:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$11_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 162,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1567:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 163,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "1602:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 164,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1602:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1567:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "1567:48:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 167,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "1630:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 168,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "1637:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1648:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1637:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 171,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1636:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1630:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 179,
												"nodeType": "IfStatement",
												"src": "1626:56:0",
												"trueBody": {
													"id": 178,
													"nodeType": "Block",
													"src": "1661:21:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 173,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1662:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 174,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "1670:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																			"typeString": "type(enum Ballot.Stage)"
																		}
																	},
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Done",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1670:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"src": "1662:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"id": 177,
															"nodeType": "ExpressionStatement",
															"src": "1662:18:0"
														}
													]
												}
											}
										]
									},
									"documentation": "Give a single vote to proposal $(toProposal).",
									"id": 181,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"name": "toProposal",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1297:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 120,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1297:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1296:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1323:0:0"
									},
									"scope": 230,
									"src": "1283:424:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "1791:346:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 186,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1804:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 187,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "1813:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Done",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1813:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "1804:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 192,
												"nodeType": "IfStatement",
												"src": "1801:33:0",
												"trueBody": {
													"id": 191,
													"nodeType": "Block",
													"src": "1825:9:0",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 185,
															"id": 190,
															"nodeType": "Return",
															"src": "1826:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													194
												],
												"declarations": [
													{
														"constant": false,
														"id": 194,
														"name": "winningVoteCount",
														"nodeType": "VariableDeclaration",
														"scope": 229,
														"src": "1844:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 193,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1844:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 196,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1871:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1844:28:0"
											},
											{
												"body": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 208,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "1954:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																		"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																	}
																},
																"id": 210,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 209,
																	"name": "prop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "1964:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1954:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$11_storage",
																	"typeString": "struct Ballot.Proposal storage ref"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voteCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "1954:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 212,
															"name": "winningVoteCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "1982:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1954:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 226,
													"nodeType": "IfStatement",
													"src": "1950:171:0",
													"trueBody": {
														"id": 225,
														"nodeType": "Block",
														"src": "2000:121:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 214,
																		"name": "winningVoteCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 194,
																		"src": "2019:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 215,
																				"name": "proposals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 29,
																				"src": "2038:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																					"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																				}
																			},
																			"id": 217,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 216,
																				"name": "prop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 198,
																				"src": "2048:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2038:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$11_storage",
																				"typeString": "struct Ballot.Proposal storage ref"
																			}
																		},
																		"id": 218,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voteCount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 10,
																		"src": "2038:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2019:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 220,
																"nodeType": "ExpressionStatement",
																"src": "2019:44:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 221,
																		"name": "_winningProposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 184,
																		"src": "2082:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 222,
																		"name": "prop",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 198,
																		"src": "2101:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2082:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 224,
																"nodeType": "ExpressionStatement",
																"src": "2082:23:0"
															}
														]
													}
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 201,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "1904:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 202,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1911:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1911:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1904:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 227,
												"initializationExpression": {
													"assignments": [
														198
													],
													"declarations": [
														{
															"constant": false,
															"id": 198,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"scope": 229,
															"src": "1888:10:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 197,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "1888:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 200,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1901:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1888:14:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1929:6:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 205,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "1929:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 207,
													"nodeType": "ExpressionStatement",
													"src": "1929:6:0"
												},
												"nodeType": "ForStatement",
												"src": "1883:238:0"
											}
										]
									},
									"documentation": null,
									"id": 229,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "winningProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1739:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"name": "_winningProposal",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1767:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 183,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1767:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1766:24:0"
									},
									"scope": 230,
									"src": "1715:422:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 231,
							"src": "58:2082:0"
						}
					],
					"src": "33:2109:0"
				},
				"id": 0
			}
		}
	}
}